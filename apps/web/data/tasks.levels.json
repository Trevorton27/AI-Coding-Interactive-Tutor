[
  {
    "id": "l1-1-headings-101",
    "title": "Headings 101",
    "description": "In this challenge, you'll learn about headings 101, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding headings 101 helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "h1",
        "code": "!!document.querySelector('h1')",
        "label": "Has element: h1"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Headings 101. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-10-semantic-layout",
    "title": "Semantic Layout",
    "description": "In this challenge, you'll learn about semantic layout, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding semantic layout helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Semantic Layout. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-11-article-section",
    "title": "Article & Section",
    "description": "In this challenge, you'll learn about article & section, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding article & section helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Article & Section. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-12-figure-figcaption",
    "title": "Figure & Figcaption",
    "description": "In this challenge, you'll learn about figure & figcaption, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding figure & figcaption helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Figure & Figcaption. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-13-emphasis-strong",
    "title": "Emphasis & Strong",
    "description": "In this challenge, you'll learn about emphasis & strong, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding emphasis & strong helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Emphasis & Strong. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-14-code-pre",
    "title": "Code & Pre",
    "description": "In this challenge, you'll learn about code & pre, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding code & pre helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Code & Pre. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-15-blockquote-cite",
    "title": "Blockquote & Cite",
    "description": "In this challenge, you'll learn about blockquote & cite, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding blockquote & cite helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Blockquote & Cite. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-16-table-basic",
    "title": "Table: Basic",
    "description": "In this challenge, you'll learn about table: basic, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding table: basic helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector('table thead th')",
        "label": "Has element: table thead th"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Table: Basic. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-17-table-caption",
    "title": "Table: Caption",
    "description": "In this challenge, you'll learn about table: caption, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding table: caption helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector('table thead th')",
        "label": "Has element: table thead th"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Table: Caption. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-18-form-inputs",
    "title": "Form Inputs",
    "description": "In this challenge, you'll learn about form inputs, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding form inputs helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "inputs",
        "code": "!!document.querySelector('input[type=text]')",
        "label": "Has element: input[type=text]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Form Inputs. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-19-form-required-email",
    "title": "Form: Required Email",
    "description": "In this challenge, you'll learn about form: required email, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding form: required email helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "email",
        "code": "!!document.querySelector('input[type=email][required]')?.getAttribute('required')",
        "label": "Has attribute required on input[type=email][required]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Form: Required Email. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-2-paragraph-basics",
    "title": "Paragraph Basics",
    "description": "In this challenge, you'll learn about paragraph basics, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding paragraph basics helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Paragraph Basics. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-20-form-fieldset-legend",
    "title": "Form: Fieldset + Legend",
    "description": "In this challenge, you'll learn about form: fieldset + legend, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding form: fieldset + legend helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Form: Fieldset + Legend. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-21-form-radio",
    "title": "Form: Radio",
    "description": "In this challenge, you'll learn about form: radio, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding form: radio helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Form: Radio. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-22-form-checkbox",
    "title": "Form: Checkbox",
    "description": "In this challenge, you'll learn about form: checkbox, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding form: checkbox helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Form: Checkbox. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-23-select-dropdown",
    "title": "Select Dropdown",
    "description": "In this challenge, you'll learn about select dropdown, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding select dropdown helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Select Dropdown. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-24-textarea-maxlength",
    "title": "Textarea + Maxlength",
    "description": "In this challenge, you'll learn about textarea + maxlength, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding textarea + maxlength helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Textarea + Maxlength. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-25-button-types",
    "title": "Button Types",
    "description": "In this challenge, you'll learn about button types, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding button types helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Button Types. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-26-labels-for",
    "title": "Labels & for",
    "description": "In this challenge, you'll learn about labels & for, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding labels & for helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Labels & for. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-27-image-alts",
    "title": "Image Alts",
    "description": "In this challenge, you'll learn about image alts, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding image alts helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Image Alts. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-28-metadata-basics",
    "title": "Metadata Basics",
    "description": "In this challenge, you'll learn about metadata basics, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding metadata basics helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Metadata Basics. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-29-favicon-link",
    "title": "Favicon Link",
    "description": "In this challenge, you'll learn about favicon link, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding favicon link helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Favicon Link. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-3-line-breaks-hr",
    "title": "Line Breaks & HR",
    "description": "In this challenge, you'll learn about line breaks & hr, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding line breaks & hr helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Line Breaks & HR. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-30-document-outline",
    "title": "Document Outline",
    "description": "In this challenge, you'll learn about document outline, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding document outline helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Document Outline. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-31-skip-link",
    "title": "Skip Link",
    "description": "In this challenge, you'll learn about skip link, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding skip link helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Skip Link. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-32-landmarks-minimal",
    "title": "Landmarks (minimal)",
    "description": "In this challenge, you'll learn about landmarks (minimal), an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding landmarks (minimal) helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Landmarks (minimal). Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-33-download-link",
    "title": "Download Link",
    "description": "In this challenge, you'll learn about download link, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding download link helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Download Link. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-34-mailto-tel-links",
    "title": "mailto/tel Links",
    "description": "In this challenge, you'll learn about mailto/tel links, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding mailto/tel links helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in mailto/tel Links. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-35-address-block",
    "title": "Address Block",
    "description": "In this challenge, you'll learn about address block, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding address block helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Address Block. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-36-time-element",
    "title": "<time> element",
    "description": "In this challenge, you'll learn about <time> element, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding <time> element helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in <time> element. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-37-datalist-suggestions",
    "title": "Datalist Suggestions",
    "description": "In this challenge, you'll learn about datalist suggestions, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding datalist suggestions helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Datalist Suggestions. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-38-progress-meter",
    "title": "Progress & Meter",
    "description": "In this challenge, you'll learn about progress & meter, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding progress & meter helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Progress & Meter. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-39-details-summary",
    "title": "Details/Summary",
    "description": "In this challenge, you'll learn about details/summary, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding details/summary helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "details",
        "code": "!!document.querySelector('details summary')",
        "label": "Has element: details summary"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Details/Summary. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-4-lists-ul",
    "title": "Lists: UL",
    "description": "In this challenge, you'll learn about lists: ul, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding lists: ul helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "ul",
        "code": "!!document.querySelector('ul li')",
        "label": "Has element: ul li"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Lists: UL. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-40-html-only-portfolio",
    "title": "HTML Only Portfolio",
    "description": "In this challenge, you'll learn about html only portfolio, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding html only portfolio helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in HTML Only Portfolio. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-5-lists-ol",
    "title": "Lists: OL",
    "description": "In this challenge, you'll learn about lists: ol, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding lists: ol helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "ol",
        "code": "!!document.querySelector('ol li')",
        "label": "Has element: ol li"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Lists: OL. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-6-nested-lists",
    "title": "Nested Lists",
    "description": "In this challenge, you'll learn about nested lists, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding nested lists helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Nested Lists. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-7-link-absolute",
    "title": "Link: Absolute",
    "description": "In this challenge, you'll learn about link: absolute, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding link: absolute helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Link: Absolute. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-8-link-relative",
    "title": "Link: Relative",
    "description": "In this challenge, you'll learn about link: relative, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding link: relative helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Link: Relative. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l1-9-images-alt",
    "title": "Images + alt",
    "description": "In this challenge, you'll learn about images + alt, an essential HTML concept. You'll create an HTML document that demonstrates proper usage of these elements.\n\nHTML (HyperText Markup Language) is the foundation of all web pages. Every website you visit is built with HTML at its core. Understanding images + alt helps you create well-structured, semantic web pages that are accessible and search-engine friendly.\n\nYour task is to write HTML code that passes all the tests. Take your time to understand how the elements work together, and don't hesitate to experiment! The best way to learn is by doing.",
    "difficulty": 1,
    "category": "html",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "tests": [
      {
        "id": "img-alt",
        "code": "!!document.querySelector('img')?.getAttribute('alt')",
        "label": "Has attribute alt on img"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": ""
    },
    "realWorldContext": "Every professional website uses the HTML concepts you're learning in Images + alt. Major sites like Google, Facebook, YouTube, and Amazon all rely on these fundamental building blocks.\n\nWhen you inspect any webpage (right-click → Inspect), you'll see these exact HTML elements in action. Web developers use these patterns daily, whether building corporate websites, e-commerce platforms, or social media applications.\n\nSearch engines like Google rely on proper HTML structure to understand and rank web pages. Accessibility tools used by people with disabilities depend on semantic HTML to navigate websites. Learning these fundamentals isn't just academic - it's essential for building modern, professional websites.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      }
    ]
  },
  {
    "id": "l2-1-normalize-base",
    "title": "Normalize & Base",
    "description": "Welcome to Normalize & Base! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Normalize & Base are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-10-responsive-nav-css-only",
    "title": "Responsive Nav (CSS only)",
    "description": "Welcome to Responsive Nav (CSS only)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Responsive Nav (CSS only) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-11-grid-gallery",
    "title": "Grid Gallery",
    "description": "Welcome to Grid Gallery! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector('.grid')",
        "label": "Has element: .grid"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Grid Gallery are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-12-media-queries",
    "title": "Media Queries",
    "description": "Welcome to Media Queries! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Media Queries are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-13-sticky-header",
    "title": "Sticky Header",
    "description": "Welcome to Sticky Header! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Sticky Header are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-14-footer-columns",
    "title": "Footer Columns",
    "description": "Welcome to Footer Columns! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Footer Columns are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-15-css-tooltip",
    "title": "CSS Tooltip",
    "description": "Welcome to CSS Tooltip! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like CSS Tooltip are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-16-css-modal-target",
    "title": "CSS Modal (target)",
    "description": "Welcome to CSS Modal (target)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like CSS Modal (target) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-17-animations",
    "title": "Animations",
    "description": "Welcome to Animations! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Animations are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-18-transitions",
    "title": "Transitions",
    "description": "Welcome to Transitions! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Transitions are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-19-svg-sprite",
    "title": "SVG Sprite",
    "description": "Welcome to SVG Sprite! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like SVG Sprite are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-2-type-scale",
    "title": "Type Scale",
    "description": "Welcome to Type Scale! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Type Scale are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-20-aspect-ratio",
    "title": "Aspect Ratio",
    "description": "Welcome to Aspect Ratio! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Aspect Ratio are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-21-form-error-states",
    "title": "Form Error States",
    "description": "Welcome to Form Error States! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Form Error States are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-22-visually-hidden-utility",
    "title": "Visually Hidden Utility",
    "description": "Welcome to Visually Hidden Utility! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Visually Hidden Utility are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-23-theme-toggle-vars",
    "title": "Theme Toggle (vars)",
    "description": "Welcome to Theme Toggle (vars)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Theme Toggle (vars) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-24-print-styles",
    "title": "Print Styles",
    "description": "Welcome to Print Styles! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Print Styles are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-25-z-index-dropdown",
    "title": "Z-Index Dropdown",
    "description": "Welcome to Z-Index Dropdown! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Z-Index Dropdown are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-26-sticky-sidebar",
    "title": "Sticky Sidebar",
    "description": "Welcome to Sticky Sidebar! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Sticky Sidebar are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-27-image-fit-sizes",
    "title": "Image Fit & Sizes",
    "description": "Welcome to Image Fit & Sizes! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Image Fit & Sizes are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-28-clamp-typography",
    "title": "Clamp Typography",
    "description": "Welcome to Clamp Typography! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Clamp Typography are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-29-grid-form",
    "title": "Grid Form",
    "description": "Welcome to Grid Form! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector('.grid')",
        "label": "Has element: .grid"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Grid Form are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-3-css-variables-theme",
    "title": "CSS Variables Theme",
    "description": "Welcome to CSS Variables Theme! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like CSS Variables Theme are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-30-css-accordion-details",
    "title": "CSS Accordion (details)",
    "description": "Welcome to CSS Accordion (details)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like CSS Accordion (details) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-31-css-tabs-radio",
    "title": "CSS Tabs (radio)",
    "description": "Welcome to CSS Tabs (radio)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like CSS Tabs (radio) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-32-progress-bar",
    "title": "Progress Bar",
    "description": "Welcome to Progress Bar! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Progress Bar are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-33-badges-pills",
    "title": "Badges & Pills",
    "description": "Welcome to Badges & Pills! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Badges & Pills are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-34-table-styles",
    "title": "Table Styles",
    "description": "Welcome to Table Styles! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector('table thead th')",
        "label": "Has element: table thead th"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Table Styles are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-35-breadcrumb",
    "title": "Breadcrumb",
    "description": "Welcome to Breadcrumb! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Breadcrumb are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-36-toast-css-show-hide",
    "title": "Toast (CSS show/hide)",
    "description": "Welcome to Toast (CSS show/hide)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Toast (CSS show/hide) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-37-masonry-like-grid",
    "title": "Masonry-like Grid",
    "description": "Welcome to Masonry-like Grid! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector('.grid')",
        "label": "Has element: .grid"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Masonry-like Grid are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-38-button-loading-state",
    "title": "Button Loading State",
    "description": "Welcome to Button Loading State! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Button Loading State are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-39-spacing-system-vars",
    "title": "Spacing System (vars)",
    "description": "Welcome to Spacing System (vars)! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Spacing System (vars) are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-4-flex-header",
    "title": "Flex Header",
    "description": "Welcome to Flex Header! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "header",
        "code": "!!document.querySelector('header nav')",
        "label": "Has element: header nav"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Flex Header are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-40-landing-page-polish",
    "title": "Landing Page Polish",
    "description": "Welcome to Landing Page Polish! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Landing Page Polish are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-5-hero-center",
    "title": "Hero Center",
    "description": "Welcome to Hero Center! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Hero Center are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-6-card-component",
    "title": "Card Component",
    "description": "Welcome to Card Component! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Card Component are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-7-button-variants",
    "title": "Button Variants",
    "description": "Welcome to Button Variants! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "btn",
        "code": "!!document.querySelector('.btn')",
        "label": "Has element: .btn"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Button Variants are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-8-form-layout-grid",
    "title": "Form Layout Grid",
    "description": "Welcome to Form Layout Grid! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector('.grid')",
        "label": "Has element: .grid"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Form Layout Grid are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l2-9-accessible-focus",
    "title": "Accessible Focus",
    "description": "Welcome to Accessible Focus! In this challenge, you'll combine HTML structure with CSS styling to create beautiful, functional web layouts. You'll learn how to use CSS properties to control the visual presentation of your HTML elements.\n\nCSS (Cascading Style Sheets) is what makes websites look good. While HTML provides the structure, CSS provides the style. Modern web development relies heavily on CSS for creating responsive, accessible, and visually appealing interfaces.\n\nYour goal is to write both HTML and CSS that work together to achieve the desired layout and appearance. Pay attention to how different CSS properties interact with your HTML structure.",
    "difficulty": 2,
    "category": "html, css",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": ""
    },
    "realWorldContext": "CSS skills like Accessible Focus are crucial in professional web development. Companies hire CSS specialists to create pixel-perfect, responsive designs that work across all devices - from phones to tablets to desktop computers.\n\nLook at any modern website: the navigation bars, card layouts, form designs, and responsive grids are all created with CSS techniques you're learning here. Frameworks like Bootstrap and Tailwind CSS are built on these same fundamental CSS concepts.\n\nIn the job market, CSS skills are highly valued. Whether you're working as a frontend developer, UI engineer, or full-stack developer, you'll use CSS every single day to bring designs to life and create beautiful user interfaces.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Semantic HTML Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "This approach emphasizes semantic HTML and accessibility best practices. It uses proper element choices, ARIA labels where appropriate, and follows modern web standards. Use this approach in production applications."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": ""
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-1-sumstrings-number",
    "title": "sumStrings → number",
    "description": "In this JavaScript challenge, you'll implement sumstrings → number. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "code": "(function(){ return (window as any).solution('2','3')===5; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in sumStrings → number are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-10-groupby",
    "title": "groupBy",
    "description": "In this JavaScript challenge, you'll implement groupby. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in groupBy are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-11-stable-sort-by-key",
    "title": "stable sort by key",
    "description": "In this JavaScript challenge, you'll implement stable sort by key. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in stable sort by key are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-12-flattendepth",
    "title": "flattenDepth",
    "description": "In this JavaScript challenge, you'll implement flattendepth. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in flattenDepth are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-13-chunk",
    "title": "chunk",
    "description": "In this JavaScript challenge, you'll implement chunk. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in chunk are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-14-memoize",
    "title": "memoize",
    "description": "In this JavaScript challenge, you'll implement memoize. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in memoize are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-15-bigint-sum",
    "title": "bigint sum",
    "description": "In this JavaScript challenge, you'll implement bigint sum. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in bigint sum are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-16-currency-format",
    "title": "currency format (¥)",
    "description": "In this JavaScript challenge, you'll implement currency format (¥). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in currency format (¥) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-17-date-helpers-start-end",
    "title": "date helpers (start/end)",
    "description": "In this JavaScript challenge, you'll implement date helpers (start/end). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in date helpers (start/end) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-18-validators-email-url",
    "title": "validators (email/url)",
    "description": "In this JavaScript challenge, you'll implement validators (email/url). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in validators (email/url) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-19-schema-guard",
    "title": "schema guard",
    "description": "In this JavaScript challenge, you'll implement schema guard. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in schema guard are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-2-once-fn",
    "title": "once(fn)",
    "description": "In this JavaScript challenge, you'll implement once(fn). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "code": "(function(){ let c=0; const f=(window as any).solution(()=>c++); f(); f(); return c===1; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in once(fn) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-20-event-emitter",
    "title": "event emitter",
    "description": "In this JavaScript challenge, you'll implement event emitter. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in event emitter are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-21-localstorage-wrapper",
    "title": "localStorage wrapper",
    "description": "In this JavaScript challenge, you'll implement localstorage wrapper. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in localStorage wrapper are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-22-lru-cache-basic",
    "title": "LRU cache (basic)",
    "description": "In this JavaScript challenge, you'll implement lru cache (basic). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in LRU cache (basic) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-23-binary-search",
    "title": "binary search",
    "description": "In this JavaScript challenge, you'll implement binary search. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in binary search are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-24-merge-sort",
    "title": "merge sort",
    "description": "In this JavaScript challenge, you'll implement merge sort. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in merge sort are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-25-hash-map-simple",
    "title": "hash map (simple)",
    "description": "In this JavaScript challenge, you'll implement hash map (simple). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in hash map (simple) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-26-set-union-intersection-diff",
    "title": "set union/intersection/diff",
    "description": "In this JavaScript challenge, you'll implement set union/intersection/diff. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in set union/intersection/diff are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-27-uuid-v4-simple",
    "title": "uuid v4 (simple)",
    "description": "In this JavaScript challenge, you'll implement uuid v4 (simple). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in uuid v4 (simple) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-28-weighted-random",
    "title": "weighted random",
    "description": "In this JavaScript challenge, you'll implement weighted random. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in weighted random are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-29-calculator-eval-core",
    "title": "calculator eval core",
    "description": "In this JavaScript challenge, you'll implement calculator eval core. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in calculator eval core are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-3-closurecounter",
    "title": "closureCounter",
    "description": "In this JavaScript challenge, you'll implement closurecounter. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in closureCounter are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-30-expression-parser-rpn",
    "title": "expression parser RPN",
    "description": "In this JavaScript challenge, you'll implement expression parser rpn. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in expression parser RPN are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-31-sanitize-form-input",
    "title": "sanitize form input",
    "description": "In this JavaScript challenge, you'll implement sanitize form input. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in sanitize form input are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-32-number-utils-clamp-round",
    "title": "number utils (clamp/round)",
    "description": "In this JavaScript challenge, you'll implement number utils (clamp/round). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in number utils (clamp/round) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-33-promise-sleep-timeout",
    "title": "promise sleep/timeout",
    "description": "In this JavaScript challenge, you'll implement promise sleep/timeout. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in promise sleep/timeout are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-34-retry-with-backoff",
    "title": "retry with backoff",
    "description": "In this JavaScript challenge, you'll implement retry with backoff. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in retry with backoff are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-35-async-queue-k",
    "title": "async queue (k)",
    "description": "In this JavaScript challenge, you'll implement async queue (k). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in async queue (k) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-36-pub-sub",
    "title": "pub/sub",
    "description": "In this JavaScript challenge, you'll implement pub/sub. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in pub/sub are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-37-finite-state-machine-calc",
    "title": "finite state machine (calc)",
    "description": "In this JavaScript challenge, you'll implement finite state machine (calc). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in finite state machine (calc) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-38-sum-amounts-helper",
    "title": "sum amounts helper",
    "description": "In this JavaScript challenge, you'll implement sum amounts helper. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in sum amounts helper are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-39-crud-service-memory",
    "title": "CRUD service (memory)",
    "description": "In this JavaScript challenge, you'll implement crud service (memory). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "code": "(function(){ const s=(window as any).solution(); const a=s.create({id:1}); return typeof s.read==='function' && a; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in CRUD service (memory) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-4-array-map-filter-reduce",
    "title": "array map/filter/reduce",
    "description": "In this JavaScript challenge, you'll implement array map/filter/reduce. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in array map/filter/reduce are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-40-totals-helper-by-category",
    "title": "totals helper by category",
    "description": "In this JavaScript challenge, you'll implement totals helper by category. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in totals helper by category are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-5-clone-shallow",
    "title": "clone (shallow)",
    "description": "In this JavaScript challenge, you'll implement clone (shallow). This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in clone (shallow) are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-6-debounce",
    "title": "debounce",
    "description": "In this JavaScript challenge, you'll implement debounce. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in debounce are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-7-throttle",
    "title": "throttle",
    "description": "In this JavaScript challenge, you'll implement throttle. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in throttle are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-8-pipe-compose",
    "title": "pipe/compose",
    "description": "In this JavaScript challenge, you'll implement pipe/compose. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in pipe/compose are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l3-9-uniqby",
    "title": "uniqBy",
    "description": "In this JavaScript challenge, you'll implement uniqby. This is where you'll write actual programming logic, working with data, functions, and algorithms. JavaScript is what makes web pages interactive and dynamic.\n\nJavaScript is the programming language of the web. Every interactive element you see online - from dropdown menus to real-time updates - is powered by JavaScript. Understanding these core programming concepts will help you build sophisticated web applications.\n\nYou'll write JavaScript code that passes the test requirements. Focus on writing clean, understandable code. Think about edge cases and how your function should behave with different inputs.",
    "difficulty": 3,
    "category": "js",
    "scaffold": {
      "index.html": "",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()",
        "label": "JS evaluation passes"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "",
      "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "realWorldContext": "The JavaScript concepts in uniqBy are fundamental to professional software development. These patterns and techniques are used in every major JavaScript application, from React and Vue apps to Node.js backends.\n\nPopular websites like Netflix use these exact programming patterns to manage data, handle user interactions, and optimize performance. Understanding these concepts opens doors to frameworks like React, Angular, and Vue, which all build on these fundamentals.\n\nJavaScript is the most popular programming language in the world. With these skills, you can build web applications, mobile apps (React Native), desktop applications (Electron), and even server-side code (Node.js). The concepts you're learning here transfer across the entire JavaScript ecosystem.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "",
          "script.js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-1-dom-render-list",
    "title": "DOM render list",
    "description": "This is a comprehensive challenge: DOM render list. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like DOM render list represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-10-form-validation",
    "title": "Form validation",
    "description": "This is a comprehensive challenge: Form validation. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Form validation represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-11-stable-ids",
    "title": "Stable IDs",
    "description": "This is a comprehensive challenge: Stable IDs. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Stable IDs represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-12-accessibility-labels-roles",
    "title": "Accessibility labels/roles",
    "description": "This is a comprehensive challenge: Accessibility labels/roles. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Accessibility labels/roles represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-13-keyboard-shortcuts",
    "title": "Keyboard shortcuts",
    "description": "This is a comprehensive challenge: Keyboard shortcuts. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Keyboard shortcuts represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-14-undo-last-delete",
    "title": "Undo last delete",
    "description": "This is a comprehensive challenge: Undo last delete. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Undo last delete represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-15-bulk-clear-confirm",
    "title": "Bulk clear (confirm)",
    "description": "This is a comprehensive challenge: Bulk clear (confirm). You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Bulk clear (confirm) represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-16-totals-panel",
    "title": "Totals panel",
    "description": "This is a comprehensive challenge: Totals panel. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Totals panel represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-17-live-total-update",
    "title": "Live total update",
    "description": "This is a comprehensive challenge: Live total update. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Live total update represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-18-currency-input-mask",
    "title": "Currency input mask",
    "description": "This is a comprehensive challenge: Currency input mask. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Currency input mask represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-19-category-field",
    "title": "Category field",
    "description": "This is a comprehensive challenge: Category field. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Category field represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-2-add-item-form",
    "title": "Add item form",
    "description": "This is a comprehensive challenge: Add item form. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Add item form represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-20-date-field-sort",
    "title": "Date field + sort",
    "description": "This is a comprehensive challenge: Date field + sort. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Date field + sort represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-21-responsive-two-column",
    "title": "Responsive two-column",
    "description": "This is a comprehensive challenge: Responsive two-column. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Responsive two-column represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-22-toast-notifications",
    "title": "Toast notifications",
    "description": "This is a comprehensive challenge: Toast notifications. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Toast notifications represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-23-modal-confirm",
    "title": "Modal confirm",
    "description": "This is a comprehensive challenge: Modal confirm. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Modal confirm represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-24-loading-empty-error-visuals",
    "title": "Loading/Empty/Error visuals",
    "description": "This is a comprehensive challenge: Loading/Empty/Error visuals. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Loading/Empty/Error visuals represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-25-import-export-json",
    "title": "Import/Export JSON",
    "description": "This is a comprehensive challenge: Import/Export JSON. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Import/Export JSON represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-26-input-masking-refine",
    "title": "Input masking refine",
    "description": "This is a comprehensive challenge: Input masking refine. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Input masking refine represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-27-data-testids",
    "title": "Data-testids",
    "description": "This is a comprehensive challenge: Data-testids. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Data-testids represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-28-tabs-views",
    "title": "Tabs views",
    "description": "This is a comprehensive challenge: Tabs views. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Tabs views represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-29-stats-view-by-category",
    "title": "Stats view (by category)",
    "description": "This is a comprehensive challenge: Stats view (by category). You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Stats view (by category) represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-3-delete-item",
    "title": "Delete item",
    "description": "This is a comprehensive challenge: Delete item. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Delete item represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-30-ls-namespacing-v1-v2",
    "title": "LS namespacing v1→v2",
    "description": "This is a comprehensive challenge: LS namespacing v1→v2. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like LS namespacing v1→v2 represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-31-debounced-saves",
    "title": "Debounced saves",
    "description": "This is a comprehensive challenge: Debounced saves. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Debounced saves represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-32-print-view",
    "title": "Print view",
    "description": "This is a comprehensive challenge: Print view. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Print view represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-33-keyboard-nav-in-list",
    "title": "Keyboard nav in list",
    "description": "This is a comprehensive challenge: Keyboard nav in list. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Keyboard nav in list represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-34-a11y-audit-fixes",
    "title": "A11y audit fixes",
    "description": "This is a comprehensive challenge: A11y audit fixes. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like A11y audit fixes represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-35-calculator-keypad-grid",
    "title": "Calculator keypad grid",
    "description": "This is a comprehensive challenge: Calculator keypad grid. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Calculator keypad grid represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-36-calculator-input-logic",
    "title": "Calculator input logic",
    "description": "This is a comprehensive challenge: Calculator input logic. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Calculator input logic represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-37-calculator-evaluate",
    "title": "Calculator evaluate",
    "description": "This is a comprehensive challenge: Calculator evaluate. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Calculator evaluate represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-38-calculator-clear-del",
    "title": "Calculator clear/del",
    "description": "This is a comprehensive challenge: Calculator clear/del. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Calculator clear/del represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-39-memory-buttons",
    "title": "Memory buttons",
    "description": "This is a comprehensive challenge: Memory buttons. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Memory buttons represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-4-edit-item-inline",
    "title": "Edit item inline",
    "description": "This is a comprehensive challenge: Edit item inline. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Edit item inline represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-40-final-expense-tracker",
    "title": "Final Expense Tracker",
    "description": "This is a comprehensive challenge: Final Expense Tracker. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Final Expense Tracker represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-5-filter-items",
    "title": "Filter items",
    "description": "This is a comprehensive challenge: Filter items. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Filter items represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-6-sort-controls",
    "title": "Sort controls",
    "description": "This is a comprehensive challenge: Sort controls. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Sort controls represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-7-empty-state",
    "title": "Empty state",
    "description": "This is a comprehensive challenge: Empty state. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Empty state represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-8-persist-to-localstorage",
    "title": "Persist to localStorage",
    "description": "This is a comprehensive challenge: Persist to localStorage. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Persist to localStorage represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  },
  {
    "id": "l4-9-hydrate-from-localstorage",
    "title": "Hydrate from localStorage",
    "description": "This is a comprehensive challenge: Hydrate from localStorage. You'll combine everything you've learned - HTML for structure, CSS for styling, and JavaScript for interactivity. This is where it all comes together to build a complete, functional feature.\n\nReal-world web development is about integrating multiple technologies seamlessly. In professional work, you'll constantly switch between HTML, CSS, and JavaScript to build complete features. This challenge mirrors that real-world experience.\n\nYour task is to create a working implementation that demonstrates your understanding of all three core web technologies. Think about user experience, code organization, and how different parts of your code interact with each other.",
    "difficulty": 4,
    "category": "html, css, js",
    "scaffold": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector('style, link[rel=stylesheet]')",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector('body')",
        "label": "Has element: body"
      }
    ],
    "solution": {
      "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "style.css": "/* styles.css */",
      "script.js": "// main.js"
    },
    "realWorldContext": "Full-stack features like Hydrate from localStorage represent the type of work you'll do as a professional web developer. This is exactly how real applications are built - integrating HTML structure, CSS styling, and JavaScript interactivity.\n\nCompanies look for developers who can build complete features from start to finish. Whether you're building a todo app, a shopping cart, a dashboard, or a social media feed, you'll use exactly these skills. This is what \"shipping features\" means in the real world.\n\nThe combination of HTML, CSS, and JavaScript you're practicing here is the foundation of frontend engineering. Master these skills, and you'll be ready to work with modern frameworks like React, Vue, or Angular, which all build on these same fundamentals.",
    "alternativeSolutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A straightforward approach that meets all requirements. This solution focuses on simplicity and clarity, making it perfect for understanding the core concepts."
      },
      {
        "label": "Modern Approach",
        "files": {
          "index.html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "style.css": "/* styles.css */",
          "script.js": "// main.js"
        },
        "explanation": "A modern implementation using current best practices and efficient patterns. This approach demonstrates how professional developers would tackle this challenge in a real project, with attention to performance and maintainability."
      }
    ]
  }
]