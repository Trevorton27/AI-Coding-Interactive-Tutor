[
  {
    "level": 1,
    "slug": "l1-1-headings-101",
    "title": "Headings 101",
    "objective": "HTML: Headings 101",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "h1",
        "type": "dom-assert",
        "selector": "h1"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Headings 101</title></head>\n<body>\n  <h1>Welcome to HTML</h1>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Headings 101</title></head>\n<body>\n  <header>\n    <h1>Professional Heading</h1>\n  </header>\n  <main>\n    <p>Well-structured content with semantic HTML.</p>\n  </main>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n  background: #f5f5f5;\n}\n\nheader {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 2rem;\n}\n\nh1 {\n  color: #2c3e50;\n  margin: 0;\n  font-size: 2.5rem;\n}\n\nmain {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-10-semantic-layout",
    "title": "Semantic Layout",
    "objective": "HTML: Semantic Layout",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Semantic Layout</title></head>\n<body>\n  <h1>Semantic Layout</h1>\n  <p>Solution for l1-10-semantic-layout</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Semantic Layout</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Semantic Layout</h1>\n    <p>Professional solution for l1-10-semantic-layout</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-11-article-section",
    "title": "Article & Section",
    "objective": "HTML: Article & Section",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Article & Section</title></head>\n<body>\n  <h1>Article & Section</h1>\n  <p>Solution for l1-11-article-section</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Article & Section</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Article & Section</h1>\n    <p>Professional solution for l1-11-article-section</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-12-figure-figcaption",
    "title": "Figure & Figcaption",
    "objective": "HTML: Figure & Figcaption",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Figure & Figcaption</title></head>\n<body>\n  <h1>Figure & Figcaption</h1>\n  <p>Solution for l1-12-figure-figcaption</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Figure & Figcaption</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Figure & Figcaption</h1>\n    <p>Professional solution for l1-12-figure-figcaption</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-13-emphasis-strong",
    "title": "Emphasis & Strong",
    "objective": "HTML: Emphasis & Strong",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Emphasis & Strong</title></head>\n<body>\n  <h1>Emphasis & Strong</h1>\n  <p>Solution for l1-13-emphasis-strong</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Emphasis & Strong</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Emphasis & Strong</h1>\n    <p>Professional solution for l1-13-emphasis-strong</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-14-code-pre",
    "title": "Code & Pre",
    "objective": "HTML: Code & Pre",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Code & Pre</title></head>\n<body>\n  <h1>Code & Pre</h1>\n  <p>Solution for l1-14-code-pre</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Code & Pre</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Code & Pre</h1>\n    <p>Professional solution for l1-14-code-pre</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-15-blockquote-cite",
    "title": "Blockquote & Cite",
    "objective": "HTML: Blockquote & Cite",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Blockquote & Cite</title></head>\n<body>\n  <h1>Blockquote & Cite</h1>\n  <p>Solution for l1-15-blockquote-cite</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Blockquote & Cite</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Blockquote & Cite</h1>\n    <p>Professional solution for l1-15-blockquote-cite</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-16-table-basic",
    "title": "Table: Basic",
    "objective": "HTML: Table: Basic",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "table",
        "type": "dom-assert",
        "selector": "table thead th"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table: Basic</title></head>\n<body>\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Age</th>\n    </tr>\n    <tr>\n      <td>Alice</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>30</td>\n    </tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table: Basic</title></head>\n<body>\n  <table>\n    <caption>Employee Directory</caption>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Position</th>\n        <th>Department</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice Johnson</td>\n        <td>Developer</td>\n        <td>Engineering</td>\n      </tr>\n      <tr>\n        <td>Bob Smith</td>\n        <td>Designer</td>\n        <td>Creative</td>\n      </tr>\n      <tr>\n        <td>Carol White</td>\n        <td>Manager</td>\n        <td>Operations</td>\n      </tr>\n    </tbody>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\ntable {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\ncaption {\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-align: left;\n  background: #2c3e50;\n  color: white;\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #34495e;\n  color: white;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n}\n\ntbody tr:hover {\n  background: #f8f9fa;\n}\n\ntbody tr:last-child td {\n  border-bottom: none;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-17-table-caption",
    "title": "Table: Caption",
    "objective": "HTML: Table: Caption",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "table",
        "type": "dom-assert",
        "selector": "table thead th"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table: Caption</title></head>\n<body>\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Age</th>\n    </tr>\n    <tr>\n      <td>Alice</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>30</td>\n    </tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table: Caption</title></head>\n<body>\n  <table>\n    <caption>Employee Directory</caption>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Position</th>\n        <th>Department</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice Johnson</td>\n        <td>Developer</td>\n        <td>Engineering</td>\n      </tr>\n      <tr>\n        <td>Bob Smith</td>\n        <td>Designer</td>\n        <td>Creative</td>\n      </tr>\n      <tr>\n        <td>Carol White</td>\n        <td>Manager</td>\n        <td>Operations</td>\n      </tr>\n    </tbody>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\ntable {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\ncaption {\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-align: left;\n  background: #2c3e50;\n  color: white;\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #34495e;\n  color: white;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n}\n\ntbody tr:hover {\n  background: #f8f9fa;\n}\n\ntbody tr:last-child td {\n  border-bottom: none;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-18-form-inputs",
    "title": "Form Inputs",
    "objective": "HTML: Form Inputs",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "inputs",
        "type": "dom-assert",
        "selector": "input[type=text]"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Inputs</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Inputs</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Inputs</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-19-form-required-email",
    "title": "Form: Required Email",
    "objective": "HTML: Form: Required Email",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "email",
        "type": "dom-assert-attr",
        "selector": "input[type=email][required]",
        "attr": "required"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Required Email</title></head>\n<body>\n  <form>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Required Email</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Required Email</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-2-paragraph-basics",
    "title": "Paragraph Basics",
    "objective": "HTML: Paragraph Basics",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Paragraph Basics</title></head>\n<body>\n  <p>This is a paragraph of text.</p>\n  <p>Here's another paragraph with more content.</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Paragraph Basics</title></head>\n<body>\n  <article>\n    <p class=\"intro\">This is an introductory paragraph with emphasis.</p>\n    <p>Regular paragraph text flows naturally and maintains readability.</p>\n    <p class=\"highlight\">This paragraph is highlighted for emphasis.</p>\n  </article>\n</body></html>",
          "css": "body {\n  font-family: Georgia, serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.8;\n  color: #333;\n}\n\narticle {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\np {\n  margin-bottom: 1.2em;\n}\n\n.intro {\n  font-size: 1.2em;\n  font-weight: 500;\n  color: #2c3e50;\n}\n\n.highlight {\n  background: #fff8e1;\n  padding: 1rem;\n  border-left: 4px solid #ffc107;\n  border-radius: 4px;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-20-form-fieldset-legend",
    "title": "Form: Fieldset + Legend",
    "objective": "HTML: Form: Fieldset + Legend",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Fieldset + Legend</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Fieldset + Legend</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Fieldset + Legend</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-21-form-radio",
    "title": "Form: Radio",
    "objective": "HTML: Form: Radio",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Radio</title></head>\n<body>\n  <form>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Radio</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Radio</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-22-form-checkbox",
    "title": "Form: Checkbox",
    "objective": "HTML: Form: Checkbox",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Checkbox</title></head>\n<body>\n  <form>\n    <label><input type=\"checkbox\" name=\"option1\"> Subscribe to newsletter</label>\n    <label><input type=\"checkbox\" name=\"option2\"> Accept terms</label>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Checkbox</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label><input type=\"checkbox\" name=\"option1\"> Subscribe to newsletter</label>\n    <label><input type=\"checkbox\" name=\"option2\"> Accept terms</label>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form: Checkbox</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label><input type=\"checkbox\" name=\"option1\"> Subscribe to newsletter</label>\n    <label><input type=\"checkbox\" name=\"option2\"> Accept terms</label>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-23-select-dropdown",
    "title": "Select Dropdown",
    "objective": "HTML: Select Dropdown",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Select Dropdown</title></head>\n<body>\n  <h1>Select Dropdown</h1>\n  <p>Solution for l1-23-select-dropdown</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Select Dropdown</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Select Dropdown</h1>\n    <p>Professional solution for l1-23-select-dropdown</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-24-textarea-maxlength",
    "title": "Textarea + Maxlength",
    "objective": "HTML: Textarea + Maxlength",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Textarea + Maxlength</title></head>\n<body>\n  <h1>Textarea + Maxlength</h1>\n  <p>Solution for l1-24-textarea-maxlength</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Textarea + Maxlength</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Textarea + Maxlength</h1>\n    <p>Professional solution for l1-24-textarea-maxlength</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-25-button-types",
    "title": "Button Types",
    "objective": "HTML: Button Types",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Types</title></head>\n<body>\n  <h1>Button Types</h1>\n  <p>Solution for l1-25-button-types</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Types</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Button Types</h1>\n    <p>Professional solution for l1-25-button-types</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-26-labels-for",
    "title": "Labels & for",
    "objective": "HTML: Labels & for",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Labels & for</title></head>\n<body>\n  <h1>Labels & for</h1>\n  <p>Solution for l1-26-labels-for</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Labels & for</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Labels & for</h1>\n    <p>Professional solution for l1-26-labels-for</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-27-image-alts",
    "title": "Image Alts",
    "objective": "HTML: Image Alts",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Image Alts</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/300x200\" alt=\"Placeholder image\">\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Image Alts</title></head>\n<body>\n  <figure>\n    <img src=\"https://via.placeholder.com/600x400\" alt=\"Beautiful landscape\">\n    <figcaption>A stunning view of the landscape</figcaption>\n  </figure>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nfigure {\n  margin: 0;\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nimg {\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 4px;\n}\n\nfigcaption {\n  margin-top: 1rem;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-28-metadata-basics",
    "title": "Metadata Basics",
    "objective": "HTML: Metadata Basics",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Metadata Basics</title></head>\n<body>\n  <h1>Metadata Basics</h1>\n  <p>Solution for l1-28-metadata-basics</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Metadata Basics</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Metadata Basics</h1>\n    <p>Professional solution for l1-28-metadata-basics</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-29-favicon-link",
    "title": "Favicon Link",
    "objective": "HTML: Favicon Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Favicon Link</title></head>\n<body>\n  <a href=\"https://example.com\">Visit Example</a>\n  <a href=\"#section\">Jump to Section</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Favicon Link</title></head>\n<body>\n  <nav>\n    <a href=\"https://example.com\" class=\"external\">External Link</a>\n    <a href=\"#about\">About</a>\n    <a href=\"#contact\">Contact</a>\n  </nav>\n  \n  <section id=\"about\">\n    <h2>About</h2>\n    <p>This section demonstrates anchor links.</p>\n  </section>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nnav {\n  background: #2c3e50;\n  padding: 1rem 2rem;\n  display: flex;\n  gap: 2rem;\n}\n\na {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  transition: background 0.3s;\n}\n\na:hover {\n  background: rgba(255,255,255,0.1);\n}\n\n.external::after {\n  content: \" ↗\";\n}\n\nsection {\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-3-line-breaks-hr",
    "title": "Line Breaks & HR",
    "objective": "HTML: Line Breaks & HR",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Line Breaks & HR</title></head>\n<body>\n  <h1>Line Breaks & HR</h1>\n  <p>Solution for l1-3-line-breaks-hr</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Line Breaks & HR</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Line Breaks & HR</h1>\n    <p>Professional solution for l1-3-line-breaks-hr</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-30-document-outline",
    "title": "Document Outline",
    "objective": "HTML: Document Outline",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Document Outline</title></head>\n<body>\n  <h1>Document Outline</h1>\n  <p>Solution for l1-30-document-outline</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Document Outline</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Document Outline</h1>\n    <p>Professional solution for l1-30-document-outline</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-31-skip-link",
    "title": "Skip Link",
    "objective": "HTML: Skip Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Skip Link</title></head>\n<body>\n  <a href=\"https://example.com\">Visit Example</a>\n  <a href=\"#section\">Jump to Section</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Skip Link</title></head>\n<body>\n  <nav>\n    <a href=\"https://example.com\" class=\"external\">External Link</a>\n    <a href=\"#about\">About</a>\n    <a href=\"#contact\">Contact</a>\n  </nav>\n  \n  <section id=\"about\">\n    <h2>About</h2>\n    <p>This section demonstrates anchor links.</p>\n  </section>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nnav {\n  background: #2c3e50;\n  padding: 1rem 2rem;\n  display: flex;\n  gap: 2rem;\n}\n\na {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  transition: background 0.3s;\n}\n\na:hover {\n  background: rgba(255,255,255,0.1);\n}\n\n.external::after {\n  content: \" ↗\";\n}\n\nsection {\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-32-landmarks-minimal",
    "title": "Landmarks (minimal)",
    "objective": "HTML: Landmarks (minimal)",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Landmarks (minimal)</title></head>\n<body>\n  <h1>Landmarks (minimal)</h1>\n  <p>Solution for l1-32-landmarks-minimal</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Landmarks (minimal)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Landmarks (minimal)</h1>\n    <p>Professional solution for l1-32-landmarks-minimal</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-33-download-link",
    "title": "Download Link",
    "objective": "HTML: Download Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Download Link</title></head>\n<body>\n  <a href=\"https://example.com\">Visit Example</a>\n  <a href=\"#section\">Jump to Section</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Download Link</title></head>\n<body>\n  <nav>\n    <a href=\"https://example.com\" class=\"external\">External Link</a>\n    <a href=\"#about\">About</a>\n    <a href=\"#contact\">Contact</a>\n  </nav>\n  \n  <section id=\"about\">\n    <h2>About</h2>\n    <p>This section demonstrates anchor links.</p>\n  </section>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nnav {\n  background: #2c3e50;\n  padding: 1rem 2rem;\n  display: flex;\n  gap: 2rem;\n}\n\na {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  transition: background 0.3s;\n}\n\na:hover {\n  background: rgba(255,255,255,0.1);\n}\n\n.external::after {\n  content: \" ↗\";\n}\n\nsection {\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-34-mailto-tel-links",
    "title": "mailto/tel Links",
    "objective": "HTML: mailto/tel Links",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>mailto/tel Links</title></head>\n<body>\n  <a href=\"https://example.com\">Visit Example</a>\n  <a href=\"#section\">Jump to Section</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>mailto/tel Links</title></head>\n<body>\n  <nav>\n    <a href=\"https://example.com\" class=\"external\">External Link</a>\n    <a href=\"#about\">About</a>\n    <a href=\"#contact\">Contact</a>\n  </nav>\n  \n  <section id=\"about\">\n    <h2>About</h2>\n    <p>This section demonstrates anchor links.</p>\n  </section>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nnav {\n  background: #2c3e50;\n  padding: 1rem 2rem;\n  display: flex;\n  gap: 2rem;\n}\n\na {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  transition: background 0.3s;\n}\n\na:hover {\n  background: rgba(255,255,255,0.1);\n}\n\n.external::after {\n  content: \" ↗\";\n}\n\nsection {\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-35-address-block",
    "title": "Address Block",
    "objective": "HTML: Address Block",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Address Block</title></head>\n<body>\n  <h1>Address Block</h1>\n  <p>Solution for l1-35-address-block</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Address Block</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Address Block</h1>\n    <p>Professional solution for l1-35-address-block</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-36-time-element",
    "title": "<time> element",
    "objective": "HTML: <time> element",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title><time> element</title></head>\n<body>\n  <h1><time> element</h1>\n  <p>Solution for l1-36-time-element</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title><time> element</title></head>\n<body>\n  <div class=\"container\">\n    <h1><time> element</h1>\n    <p>Professional solution for l1-36-time-element</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-37-datalist-suggestions",
    "title": "Datalist Suggestions",
    "objective": "HTML: Datalist Suggestions",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Datalist Suggestions</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Datalist Suggestions</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-38-progress-meter",
    "title": "Progress & Meter",
    "objective": "HTML: Progress & Meter",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Progress & Meter</title></head>\n<body>\n  <h1>Progress & Meter</h1>\n  <p>Solution for l1-38-progress-meter</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Progress & Meter</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Progress & Meter</h1>\n    <p>Professional solution for l1-38-progress-meter</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-39-details-summary",
    "title": "Details/Summary",
    "objective": "HTML: Details/Summary",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "details",
        "type": "dom-assert",
        "selector": "details summary"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Details/Summary</title></head>\n<body>\n  <h1>Details/Summary</h1>\n  <p>Solution for l1-39-details-summary</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Details/Summary</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Details/Summary</h1>\n    <p>Professional solution for l1-39-details-summary</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-4-lists-ul",
    "title": "Lists: UL",
    "objective": "HTML: Lists: UL",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "ul",
        "type": "dom-assert",
        "selector": "ul li"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Lists: UL</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Lists: UL</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-40-html-only-portfolio",
    "title": "HTML Only Portfolio",
    "objective": "HTML: HTML Only Portfolio",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>HTML Only Portfolio</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>HTML Only Portfolio</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-5-lists-ol",
    "title": "Lists: OL",
    "objective": "HTML: Lists: OL",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "ol",
        "type": "dom-assert",
        "selector": "ol li"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Lists: OL</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Lists: OL</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-6-nested-lists",
    "title": "Nested Lists",
    "objective": "HTML: Nested Lists",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Nested Lists</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Nested Lists</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-7-link-absolute",
    "title": "Link: Absolute",
    "objective": "HTML: Link: Absolute",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Link: Absolute</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Link: Absolute</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-8-link-relative",
    "title": "Link: Relative",
    "objective": "HTML: Link: Relative",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Link: Relative</title></head>\n<body>\n  <a href=\"https://example.com\">Visit Example</a>\n  <a href=\"#section\">Jump to Section</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Link: Relative</title></head>\n<body>\n  <nav>\n    <a href=\"https://example.com\" class=\"external\">External Link</a>\n    <a href=\"#about\">About</a>\n    <a href=\"#contact\">Contact</a>\n  </nav>\n  \n  <section id=\"about\">\n    <h2>About</h2>\n    <p>This section demonstrates anchor links.</p>\n  </section>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\nnav {\n  background: #2c3e50;\n  padding: 1rem 2rem;\n  display: flex;\n  gap: 2rem;\n}\n\na {\n  color: white;\n  text-decoration: none;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  transition: background 0.3s;\n}\n\na:hover {\n  background: rgba(255,255,255,0.1);\n}\n\n.external::after {\n  content: \" ↗\";\n}\n\nsection {\n  padding: 2rem;\n  max-width: 800px;\n  margin: 0 auto;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-9-images-alt",
    "title": "Images + alt",
    "objective": "HTML: Images + alt",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "img-alt",
        "type": "dom-assert-attr",
        "selector": "img",
        "attr": "alt"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Images + alt</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/300x200\" alt=\"Placeholder image\">\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Images + alt</title></head>\n<body>\n  <figure>\n    <img src=\"https://via.placeholder.com/600x400\" alt=\"Beautiful landscape\">\n    <figcaption>A stunning view of the landscape</figcaption>\n  </figure>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nfigure {\n  margin: 0;\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nimg {\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 4px;\n}\n\nfigcaption {\n  margin-top: 1rem;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-1-normalize-base",
    "title": "Normalize & Base",
    "objective": "HTML+CSS: Normalize & Base",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Normalize & Base</title></head>\n<body>\n  <h1>Normalize & Base</h1>\n  <p>Solution for l2-1-normalize-base</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Normalize & Base</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Normalize & Base</h1>\n    <p>Professional solution for l2-1-normalize-base</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-10-responsive-nav-css-only",
    "title": "Responsive Nav (CSS only)",
    "objective": "HTML+CSS: Responsive Nav (CSS only)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Responsive Nav (CSS only)</title></head>\n<body>\n  <h1>Responsive Nav (CSS only)</h1>\n  <p>Solution for l2-10-responsive-nav-css-only</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Responsive Nav (CSS only)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Responsive Nav (CSS only)</h1>\n    <p>Professional solution for l2-10-responsive-nav-css-only</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-11-grid-gallery",
    "title": "Grid Gallery",
    "objective": "HTML+CSS: Grid Gallery",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "grid",
        "type": "dom-assert",
        "selector": ".grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Grid Gallery</title></head>\n<body>\n  <h1>Grid Gallery</h1>\n  <p>Solution for l2-11-grid-gallery</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Grid Gallery</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Grid Gallery</h1>\n    <p>Professional solution for l2-11-grid-gallery</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-12-media-queries",
    "title": "Media Queries",
    "objective": "HTML+CSS: Media Queries",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Media Queries</title></head>\n<body>\n  <h1>Media Queries</h1>\n  <p>Solution for l2-12-media-queries</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Media Queries</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Media Queries</h1>\n    <p>Professional solution for l2-12-media-queries</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-13-sticky-header",
    "title": "Sticky Header",
    "objective": "HTML+CSS: Sticky Header",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sticky Header</title></head>\n<body>\n  <h1>Sticky Header</h1>\n  <p>Solution for l2-13-sticky-header</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sticky Header</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Sticky Header</h1>\n    <p>Professional solution for l2-13-sticky-header</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-14-footer-columns",
    "title": "Footer Columns",
    "objective": "HTML+CSS: Footer Columns",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Footer Columns</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Footer Columns</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-15-css-tooltip",
    "title": "CSS Tooltip",
    "objective": "HTML+CSS: CSS Tooltip",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Tooltip</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Tooltip</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-16-css-modal-target",
    "title": "CSS Modal (target)",
    "objective": "HTML+CSS: CSS Modal (target)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Modal (target)</title></head>\n<body>\n  <h1>CSS Modal (target)</h1>\n  <p>Solution for l2-16-css-modal-target</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Modal (target)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>CSS Modal (target)</h1>\n    <p>Professional solution for l2-16-css-modal-target</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-17-animations",
    "title": "Animations",
    "objective": "HTML+CSS: Animations",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Animations</title></head>\n<body>\n  <h1>Animations</h1>\n  <p>Solution for l2-17-animations</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Animations</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Animations</h1>\n    <p>Professional solution for l2-17-animations</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-18-transitions",
    "title": "Transitions",
    "objective": "HTML+CSS: Transitions",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Transitions</title></head>\n<body>\n  <h1>Transitions</h1>\n  <p>Solution for l2-18-transitions</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Transitions</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Transitions</h1>\n    <p>Professional solution for l2-18-transitions</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-19-svg-sprite",
    "title": "SVG Sprite",
    "objective": "HTML+CSS: SVG Sprite",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>SVG Sprite</title></head>\n<body>\n  <h1>SVG Sprite</h1>\n  <p>Solution for l2-19-svg-sprite</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>SVG Sprite</title></head>\n<body>\n  <div class=\"container\">\n    <h1>SVG Sprite</h1>\n    <p>Professional solution for l2-19-svg-sprite</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-2-type-scale",
    "title": "Type Scale",
    "objective": "HTML+CSS: Type Scale",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Type Scale</title></head>\n<body>\n  <h1>Type Scale</h1>\n  <p>Solution for l2-2-type-scale</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Type Scale</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Type Scale</h1>\n    <p>Professional solution for l2-2-type-scale</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-20-aspect-ratio",
    "title": "Aspect Ratio",
    "objective": "HTML+CSS: Aspect Ratio",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Aspect Ratio</title></head>\n<body>\n  <h1>Aspect Ratio</h1>\n  <p>Solution for l2-20-aspect-ratio</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Aspect Ratio</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Aspect Ratio</h1>\n    <p>Professional solution for l2-20-aspect-ratio</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-21-form-error-states",
    "title": "Form Error States",
    "objective": "HTML+CSS: Form Error States",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Error States</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Error States</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Error States</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-22-visually-hidden-utility",
    "title": "Visually Hidden Utility",
    "objective": "HTML+CSS: Visually Hidden Utility",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Visually Hidden Utility</title></head>\n<body>\n  <h1>Visually Hidden Utility</h1>\n  <p>Solution for l2-22-visually-hidden-utility</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Visually Hidden Utility</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Visually Hidden Utility</h1>\n    <p>Professional solution for l2-22-visually-hidden-utility</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-23-theme-toggle-vars",
    "title": "Theme Toggle (vars)",
    "objective": "HTML+CSS: Theme Toggle (vars)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Theme Toggle (vars)</title></head>\n<body>\n  <h1>Theme Toggle (vars)</h1>\n  <p>Solution for l2-23-theme-toggle-vars</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Theme Toggle (vars)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Theme Toggle (vars)</h1>\n    <p>Professional solution for l2-23-theme-toggle-vars</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-24-print-styles",
    "title": "Print Styles",
    "objective": "HTML+CSS: Print Styles",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Print Styles</title></head>\n<body>\n  <h1>Print Styles</h1>\n  <p>Solution for l2-24-print-styles</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Print Styles</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Print Styles</h1>\n    <p>Professional solution for l2-24-print-styles</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-25-z-index-dropdown",
    "title": "Z-Index Dropdown",
    "objective": "HTML+CSS: Z-Index Dropdown",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Z-Index Dropdown</title></head>\n<body>\n  <h1>Z-Index Dropdown</h1>\n  <p>Solution for l2-25-z-index-dropdown</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Z-Index Dropdown</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Z-Index Dropdown</h1>\n    <p>Professional solution for l2-25-z-index-dropdown</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-26-sticky-sidebar",
    "title": "Sticky Sidebar",
    "objective": "HTML+CSS: Sticky Sidebar",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sticky Sidebar</title></head>\n<body>\n  <h1>Sticky Sidebar</h1>\n  <p>Solution for l2-26-sticky-sidebar</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sticky Sidebar</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Sticky Sidebar</h1>\n    <p>Professional solution for l2-26-sticky-sidebar</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-27-image-fit-sizes",
    "title": "Image Fit & Sizes",
    "objective": "HTML+CSS: Image Fit & Sizes",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Image Fit & Sizes</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/300x200\" alt=\"Placeholder image\">\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Image Fit & Sizes</title></head>\n<body>\n  <figure>\n    <img src=\"https://via.placeholder.com/600x400\" alt=\"Beautiful landscape\">\n    <figcaption>A stunning view of the landscape</figcaption>\n  </figure>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nfigure {\n  margin: 0;\n  background: white;\n  padding: 1rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nimg {\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 4px;\n}\n\nfigcaption {\n  margin-top: 1rem;\n  text-align: center;\n  color: #666;\n  font-style: italic;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-28-clamp-typography",
    "title": "Clamp Typography",
    "objective": "HTML+CSS: Clamp Typography",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Clamp Typography</title></head>\n<body>\n  <h1>Clamp Typography</h1>\n  <p>Solution for l2-28-clamp-typography</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Clamp Typography</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Clamp Typography</h1>\n    <p>Professional solution for l2-28-clamp-typography</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-29-grid-form",
    "title": "Grid Form",
    "objective": "HTML+CSS: Grid Form",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "grid",
        "type": "dom-assert",
        "selector": ".grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Grid Form</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Grid Form</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Grid Form</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-3-css-variables-theme",
    "title": "CSS Variables Theme",
    "objective": "HTML+CSS: CSS Variables Theme",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Variables Theme</title></head>\n<body>\n  <h1>CSS Variables Theme</h1>\n  <p>Solution for l2-3-css-variables-theme</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Variables Theme</title></head>\n<body>\n  <div class=\"container\">\n    <h1>CSS Variables Theme</h1>\n    <p>Professional solution for l2-3-css-variables-theme</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-30-css-accordion-details",
    "title": "CSS Accordion (details)",
    "objective": "HTML+CSS: CSS Accordion (details)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Accordion (details)</title></head>\n<body>\n  <h1>CSS Accordion (details)</h1>\n  <p>Solution for l2-30-css-accordion-details</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Accordion (details)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>CSS Accordion (details)</h1>\n    <p>Professional solution for l2-30-css-accordion-details</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-31-css-tabs-radio",
    "title": "CSS Tabs (radio)",
    "objective": "HTML+CSS: CSS Tabs (radio)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Tabs (radio)</title></head>\n<body>\n  <form>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Tabs (radio)</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CSS Tabs (radio)</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <fieldset>\n      <legend>Choose an option:</legend>\n      <label><input type=\"radio\" name=\"choice\" value=\"1\"> Option 1</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"2\"> Option 2</label>\n      <label><input type=\"radio\" name=\"choice\" value=\"3\"> Option 3</label>\n    </fieldset>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-32-progress-bar",
    "title": "Progress Bar",
    "objective": "HTML+CSS: Progress Bar",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Progress Bar</title></head>\n<body>\n  <h1>Progress Bar</h1>\n  <p>Solution for l2-32-progress-bar</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Progress Bar</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Progress Bar</h1>\n    <p>Professional solution for l2-32-progress-bar</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-33-badges-pills",
    "title": "Badges & Pills",
    "objective": "HTML+CSS: Badges & Pills",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Badges & Pills</title></head>\n<body>\n  <h1>Badges & Pills</h1>\n  <p>Solution for l2-33-badges-pills</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Badges & Pills</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Badges & Pills</h1>\n    <p>Professional solution for l2-33-badges-pills</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-34-table-styles",
    "title": "Table Styles",
    "objective": "HTML+CSS: Table Styles",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "table",
        "type": "dom-assert",
        "selector": "table thead th"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table Styles</title></head>\n<body>\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Age</th>\n    </tr>\n    <tr>\n      <td>Alice</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>30</td>\n    </tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Table Styles</title></head>\n<body>\n  <table>\n    <caption>Employee Directory</caption>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Position</th>\n        <th>Department</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice Johnson</td>\n        <td>Developer</td>\n        <td>Engineering</td>\n      </tr>\n      <tr>\n        <td>Bob Smith</td>\n        <td>Designer</td>\n        <td>Creative</td>\n      </tr>\n      <tr>\n        <td>Carol White</td>\n        <td>Manager</td>\n        <td>Operations</td>\n      </tr>\n    </tbody>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\ntable {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\ncaption {\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-align: left;\n  background: #2c3e50;\n  color: white;\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #34495e;\n  color: white;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n}\n\ntbody tr:hover {\n  background: #f8f9fa;\n}\n\ntbody tr:last-child td {\n  border-bottom: none;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-35-breadcrumb",
    "title": "Breadcrumb",
    "objective": "HTML+CSS: Breadcrumb",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Breadcrumb</title></head>\n<body>\n  <h1>Breadcrumb</h1>\n  <p>Solution for l2-35-breadcrumb</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Breadcrumb</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Breadcrumb</h1>\n    <p>Professional solution for l2-35-breadcrumb</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-36-toast-css-show-hide",
    "title": "Toast (CSS show/hide)",
    "objective": "HTML+CSS: Toast (CSS show/hide)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Toast (CSS show/hide)</title></head>\n<body>\n  <h1>Toast (CSS show/hide)</h1>\n  <p>Solution for l2-36-toast-css-show-hide</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Toast (CSS show/hide)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Toast (CSS show/hide)</h1>\n    <p>Professional solution for l2-36-toast-css-show-hide</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-37-masonry-like-grid",
    "title": "Masonry-like Grid",
    "objective": "HTML+CSS: Masonry-like Grid",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "grid",
        "type": "dom-assert",
        "selector": ".grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Masonry-like Grid</title></head>\n<body>\n  <h1>Masonry-like Grid</h1>\n  <p>Solution for l2-37-masonry-like-grid</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Masonry-like Grid</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Masonry-like Grid</h1>\n    <p>Professional solution for l2-37-masonry-like-grid</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-38-button-loading-state",
    "title": "Button Loading State",
    "objective": "HTML+CSS: Button Loading State",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Loading State</title></head>\n<body>\n  <h1>Button Loading State</h1>\n  <p>Solution for l2-38-button-loading-state</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Loading State</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Button Loading State</h1>\n    <p>Professional solution for l2-38-button-loading-state</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-39-spacing-system-vars",
    "title": "Spacing System (vars)",
    "objective": "HTML+CSS: Spacing System (vars)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Spacing System (vars)</title></head>\n<body>\n  <h1>Spacing System (vars)</h1>\n  <p>Solution for l2-39-spacing-system-vars</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Spacing System (vars)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Spacing System (vars)</h1>\n    <p>Professional solution for l2-39-spacing-system-vars</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-4-flex-header",
    "title": "Flex Header",
    "objective": "HTML+CSS: Flex Header",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "header",
        "type": "dom-assert",
        "selector": "header nav"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Flex Header</title></head>\n<body>\n  <h1>Flex Header</h1>\n  <p>Solution for l2-4-flex-header</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Flex Header</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Flex Header</h1>\n    <p>Professional solution for l2-4-flex-header</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-40-landing-page-polish",
    "title": "Landing Page Polish",
    "objective": "HTML+CSS: Landing Page Polish",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Landing Page Polish</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Landing Page Polish</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-5-hero-center",
    "title": "Hero Center",
    "objective": "HTML+CSS: Hero Center",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Hero Center</title></head>\n<body>\n  <h1>Hero Center</h1>\n  <p>Solution for l2-5-hero-center</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Hero Center</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Hero Center</h1>\n    <p>Professional solution for l2-5-hero-center</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-6-card-component",
    "title": "Card Component",
    "objective": "HTML+CSS: Card Component",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Card Component</title></head>\n<body>\n  <h1>Card Component</h1>\n  <p>Solution for l2-6-card-component</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Card Component</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Card Component</h1>\n    <p>Professional solution for l2-6-card-component</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-7-button-variants",
    "title": "Button Variants",
    "objective": "HTML+CSS: Button Variants",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "btn",
        "type": "dom-assert",
        "selector": ".btn"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Variants</title></head>\n<body>\n  <h1>Button Variants</h1>\n  <p>Solution for l2-7-button-variants</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Button Variants</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Button Variants</h1>\n    <p>Professional solution for l2-7-button-variants</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-8-form-layout-grid",
    "title": "Form Layout Grid",
    "objective": "HTML+CSS: Form Layout Grid",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "grid",
        "type": "dom-assert",
        "selector": ".grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Layout Grid</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Layout Grid</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form Layout Grid</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-9-accessible-focus",
    "title": "Accessible Focus",
    "objective": "HTML+CSS: Accessible Focus",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Accessible Focus</title></head>\n<body>\n  <h1>Accessible Focus</h1>\n  <p>Solution for l2-9-accessible-focus</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Accessible Focus</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Accessible Focus</h1>\n    <p>Professional solution for l2-9-accessible-focus</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-1-sumstrings-number",
    "title": "sumStrings → number",
    "objective": "JavaScript: sumStrings → number",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "type": "js-eval",
        "code": "(function(){ return (window as any).solution('2','3')===5; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sumStrings → number</title></head>\n<body>\n  <h1>sumStrings → number</h1>\n  <p>Solution for l3-1-sumstrings-number</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sumStrings → number</title></head>\n<body>\n  <div class=\"container\">\n    <h1>sumStrings → number</h1>\n    <p>Professional solution for l3-1-sumstrings-number</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-10-groupby",
    "title": "groupBy",
    "objective": "JavaScript: groupBy",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>groupBy</title></head>\n<body>\n  <h1>groupBy</h1>\n  <p>Solution for l3-10-groupby</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>groupBy</title></head>\n<body>\n  <div class=\"container\">\n    <h1>groupBy</h1>\n    <p>Professional solution for l3-10-groupby</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-11-stable-sort-by-key",
    "title": "stable sort by key",
    "objective": "JavaScript: stable sort by key",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>stable sort by key</title></head>\n<body>\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Age</th>\n    </tr>\n    <tr>\n      <td>Alice</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>30</td>\n    </tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>stable sort by key</title></head>\n<body>\n  <table>\n    <caption>Employee Directory</caption>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Position</th>\n        <th>Department</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice Johnson</td>\n        <td>Developer</td>\n        <td>Engineering</td>\n      </tr>\n      <tr>\n        <td>Bob Smith</td>\n        <td>Designer</td>\n        <td>Creative</td>\n      </tr>\n      <tr>\n        <td>Carol White</td>\n        <td>Manager</td>\n        <td>Operations</td>\n      </tr>\n    </tbody>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\ntable {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\ncaption {\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-align: left;\n  background: #2c3e50;\n  color: white;\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #34495e;\n  color: white;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n}\n\ntbody tr:hover {\n  background: #f8f9fa;\n}\n\ntbody tr:last-child td {\n  border-bottom: none;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-12-flattendepth",
    "title": "flattenDepth",
    "objective": "JavaScript: flattenDepth",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>flattenDepth</title></head>\n<body>\n  <h1>flattenDepth</h1>\n  <p>Solution for l3-12-flattendepth</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>flattenDepth</title></head>\n<body>\n  <div class=\"container\">\n    <h1>flattenDepth</h1>\n    <p>Professional solution for l3-12-flattendepth</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-13-chunk",
    "title": "chunk",
    "objective": "JavaScript: chunk",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>chunk</title></head>\n<body>\n  <h1>chunk</h1>\n  <p>Solution for l3-13-chunk</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>chunk</title></head>\n<body>\n  <div class=\"container\">\n    <h1>chunk</h1>\n    <p>Professional solution for l3-13-chunk</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-14-memoize",
    "title": "memoize",
    "objective": "JavaScript: memoize",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>memoize</title></head>\n<body>\n  <h1>memoize</h1>\n  <p>Solution for l3-14-memoize</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>memoize</title></head>\n<body>\n  <div class=\"container\">\n    <h1>memoize</h1>\n    <p>Professional solution for l3-14-memoize</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-15-bigint-sum",
    "title": "bigint sum",
    "objective": "JavaScript: bigint sum",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>bigint sum</title></head>\n<body>\n  <h1>bigint sum</h1>\n  <p>Solution for l3-15-bigint-sum</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>bigint sum</title></head>\n<body>\n  <div class=\"container\">\n    <h1>bigint sum</h1>\n    <p>Professional solution for l3-15-bigint-sum</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-16-currency-format",
    "title": "currency format (¥)",
    "objective": "JavaScript: currency format (¥)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>currency format (¥)</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>currency format (¥)</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>currency format (¥)</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-17-date-helpers-start-end",
    "title": "date helpers (start/end)",
    "objective": "JavaScript: date helpers (start/end)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>date helpers (start/end)</title></head>\n<body>\n  <h1>date helpers (start/end)</h1>\n  <p>Solution for l3-17-date-helpers-start-end</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>date helpers (start/end)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>date helpers (start/end)</h1>\n    <p>Professional solution for l3-17-date-helpers-start-end</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-18-validators-email-url",
    "title": "validators (email/url)",
    "objective": "JavaScript: validators (email/url)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>validators (email/url)</title></head>\n<body>\n  <form>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>validators (email/url)</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>validators (email/url)</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"email\">Email:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-19-schema-guard",
    "title": "schema guard",
    "objective": "JavaScript: schema guard",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>schema guard</title></head>\n<body>\n  <h1>schema guard</h1>\n  <p>Solution for l3-19-schema-guard</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>schema guard</title></head>\n<body>\n  <div class=\"container\">\n    <h1>schema guard</h1>\n    <p>Professional solution for l3-19-schema-guard</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-2-once-fn",
    "title": "once(fn)",
    "objective": "JavaScript: once(fn)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "type": "js-eval",
        "code": "(function(){ let c=0; const f=(window as any).solution(()=>c++); f(); f(); return c===1; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>once(fn)</title></head>\n<body>\n  <h1>once(fn)</h1>\n  <p>Solution for l3-2-once-fn</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>once(fn)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>once(fn)</h1>\n    <p>Professional solution for l3-2-once-fn</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-20-event-emitter",
    "title": "event emitter",
    "objective": "JavaScript: event emitter",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>event emitter</title></head>\n<body>\n  <h1>event emitter</h1>\n  <p>Solution for l3-20-event-emitter</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>event emitter</title></head>\n<body>\n  <div class=\"container\">\n    <h1>event emitter</h1>\n    <p>Professional solution for l3-20-event-emitter</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-21-localstorage-wrapper",
    "title": "localStorage wrapper",
    "objective": "JavaScript: localStorage wrapper",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>localStorage wrapper</title></head>\n<body>\n  <h1>localStorage wrapper</h1>\n  <p>Solution for l3-21-localstorage-wrapper</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>localStorage wrapper</title></head>\n<body>\n  <div class=\"container\">\n    <h1>localStorage wrapper</h1>\n    <p>Professional solution for l3-21-localstorage-wrapper</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-22-lru-cache-basic",
    "title": "LRU cache (basic)",
    "objective": "JavaScript: LRU cache (basic)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>LRU cache (basic)</title></head>\n<body>\n  <h1>LRU cache (basic)</h1>\n  <p>Solution for l3-22-lru-cache-basic</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>LRU cache (basic)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>LRU cache (basic)</h1>\n    <p>Professional solution for l3-22-lru-cache-basic</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-23-binary-search",
    "title": "binary search",
    "objective": "JavaScript: binary search",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>binary search</title></head>\n<body>\n  <h1>binary search</h1>\n  <p>Solution for l3-23-binary-search</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>binary search</title></head>\n<body>\n  <div class=\"container\">\n    <h1>binary search</h1>\n    <p>Professional solution for l3-23-binary-search</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-24-merge-sort",
    "title": "merge sort",
    "objective": "JavaScript: merge sort",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>merge sort</title></head>\n<body>\n  <h1>merge sort</h1>\n  <p>Solution for l3-24-merge-sort</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>merge sort</title></head>\n<body>\n  <div class=\"container\">\n    <h1>merge sort</h1>\n    <p>Professional solution for l3-24-merge-sort</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-25-hash-map-simple",
    "title": "hash map (simple)",
    "objective": "JavaScript: hash map (simple)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>hash map (simple)</title></head>\n<body>\n  <h1>hash map (simple)</h1>\n  <p>Solution for l3-25-hash-map-simple</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>hash map (simple)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>hash map (simple)</h1>\n    <p>Professional solution for l3-25-hash-map-simple</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-26-set-union-intersection-diff",
    "title": "set union/intersection/diff",
    "objective": "JavaScript: set union/intersection/diff",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>set union/intersection/diff</title></head>\n<body>\n  <h1>set union/intersection/diff</h1>\n  <p>Solution for l3-26-set-union-intersection-diff</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>set union/intersection/diff</title></head>\n<body>\n  <div class=\"container\">\n    <h1>set union/intersection/diff</h1>\n    <p>Professional solution for l3-26-set-union-intersection-diff</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-27-uuid-v4-simple",
    "title": "uuid v4 (simple)",
    "objective": "JavaScript: uuid v4 (simple)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>uuid v4 (simple)</title></head>\n<body>\n  <h1>uuid v4 (simple)</h1>\n  <p>Solution for l3-27-uuid-v4-simple</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>uuid v4 (simple)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>uuid v4 (simple)</h1>\n    <p>Professional solution for l3-27-uuid-v4-simple</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-28-weighted-random",
    "title": "weighted random",
    "objective": "JavaScript: weighted random",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>weighted random</title></head>\n<body>\n  <h1>weighted random</h1>\n  <p>Solution for l3-28-weighted-random</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>weighted random</title></head>\n<body>\n  <div class=\"container\">\n    <h1>weighted random</h1>\n    <p>Professional solution for l3-28-weighted-random</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-29-calculator-eval-core",
    "title": "calculator eval core",
    "objective": "JavaScript: calculator eval core",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>calculator eval core</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>calculator eval core</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-3-closurecounter",
    "title": "closureCounter",
    "objective": "JavaScript: closureCounter",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>closureCounter</title></head>\n<body>\n  <h1>closureCounter</h1>\n  <p>Solution for l3-3-closurecounter</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>closureCounter</title></head>\n<body>\n  <div class=\"container\">\n    <h1>closureCounter</h1>\n    <p>Professional solution for l3-3-closurecounter</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-30-expression-parser-rpn",
    "title": "expression parser RPN",
    "objective": "JavaScript: expression parser RPN",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>expression parser RPN</title></head>\n<body>\n  <h1>expression parser RPN</h1>\n  <p>Solution for l3-30-expression-parser-rpn</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>expression parser RPN</title></head>\n<body>\n  <div class=\"container\">\n    <h1>expression parser RPN</h1>\n    <p>Professional solution for l3-30-expression-parser-rpn</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-31-sanitize-form-input",
    "title": "sanitize form input",
    "objective": "JavaScript: sanitize form input",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sanitize form input</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sanitize form input</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sanitize form input</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-32-number-utils-clamp-round",
    "title": "number utils (clamp/round)",
    "objective": "JavaScript: number utils (clamp/round)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>number utils (clamp/round)</title></head>\n<body>\n  <h1>number utils (clamp/round)</h1>\n  <p>Solution for l3-32-number-utils-clamp-round</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>number utils (clamp/round)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>number utils (clamp/round)</h1>\n    <p>Professional solution for l3-32-number-utils-clamp-round</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-33-promise-sleep-timeout",
    "title": "promise sleep/timeout",
    "objective": "JavaScript: promise sleep/timeout",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>promise sleep/timeout</title></head>\n<body>\n  <h1>promise sleep/timeout</h1>\n  <p>Solution for l3-33-promise-sleep-timeout</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>promise sleep/timeout</title></head>\n<body>\n  <div class=\"container\">\n    <h1>promise sleep/timeout</h1>\n    <p>Professional solution for l3-33-promise-sleep-timeout</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-34-retry-with-backoff",
    "title": "retry with backoff",
    "objective": "JavaScript: retry with backoff",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>retry with backoff</title></head>\n<body>\n  <h1>retry with backoff</h1>\n  <p>Solution for l3-34-retry-with-backoff</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>retry with backoff</title></head>\n<body>\n  <div class=\"container\">\n    <h1>retry with backoff</h1>\n    <p>Professional solution for l3-34-retry-with-backoff</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-35-async-queue-k",
    "title": "async queue (k)",
    "objective": "JavaScript: async queue (k)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>async queue (k)</title></head>\n<body>\n  <h1>async queue (k)</h1>\n  <p>Solution for l3-35-async-queue-k</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>async queue (k)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>async queue (k)</h1>\n    <p>Professional solution for l3-35-async-queue-k</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-36-pub-sub",
    "title": "pub/sub",
    "objective": "JavaScript: pub/sub",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>pub/sub</title></head>\n<body>\n  <h1>pub/sub</h1>\n  <p>Solution for l3-36-pub-sub</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>pub/sub</title></head>\n<body>\n  <div class=\"container\">\n    <h1>pub/sub</h1>\n    <p>Professional solution for l3-36-pub-sub</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-37-finite-state-machine-calc",
    "title": "finite state machine (calc)",
    "objective": "JavaScript: finite state machine (calc)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>finite state machine (calc)</title></head>\n<body>\n  <h1>finite state machine (calc)</h1>\n  <p>Solution for l3-37-finite-state-machine-calc</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>finite state machine (calc)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>finite state machine (calc)</h1>\n    <p>Professional solution for l3-37-finite-state-machine-calc</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-38-sum-amounts-helper",
    "title": "sum amounts helper",
    "objective": "JavaScript: sum amounts helper",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sum amounts helper</title></head>\n<body>\n  <h1>sum amounts helper</h1>\n  <p>Solution for l3-38-sum-amounts-helper</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>sum amounts helper</title></head>\n<body>\n  <div class=\"container\">\n    <h1>sum amounts helper</h1>\n    <p>Professional solution for l3-38-sum-amounts-helper</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-39-crud-service-memory",
    "title": "CRUD service (memory)",
    "objective": "JavaScript: CRUD service (memory)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "eval",
        "type": "js-eval",
        "code": "(function(){ const s=(window as any).solution(); const a=s.create({id:1}); return typeof s.read==='function' && a; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CRUD service (memory)</title></head>\n<body>\n  <h1>CRUD service (memory)</h1>\n  <p>Solution for l3-39-crud-service-memory</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>CRUD service (memory)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>CRUD service (memory)</h1>\n    <p>Professional solution for l3-39-crud-service-memory</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-4-array-map-filter-reduce",
    "title": "array map/filter/reduce",
    "objective": "JavaScript: array map/filter/reduce",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>array map/filter/reduce</title></head>\n<body>\n  <h1>array map/filter/reduce</h1>\n  <p>Solution for l3-4-array-map-filter-reduce</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>array map/filter/reduce</title></head>\n<body>\n  <div class=\"container\">\n    <h1>array map/filter/reduce</h1>\n    <p>Professional solution for l3-4-array-map-filter-reduce</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-40-totals-helper-by-category",
    "title": "totals helper by category",
    "objective": "JavaScript: totals helper by category",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>totals helper by category</title></head>\n<body>\n  <h1>totals helper by category</h1>\n  <p>Solution for l3-40-totals-helper-by-category</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>totals helper by category</title></head>\n<body>\n  <div class=\"container\">\n    <h1>totals helper by category</h1>\n    <p>Professional solution for l3-40-totals-helper-by-category</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-5-clone-shallow",
    "title": "clone (shallow)",
    "objective": "JavaScript: clone (shallow)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>clone (shallow)</title></head>\n<body>\n  <h1>clone (shallow)</h1>\n  <p>Solution for l3-5-clone-shallow</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>clone (shallow)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>clone (shallow)</h1>\n    <p>Professional solution for l3-5-clone-shallow</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-6-debounce",
    "title": "debounce",
    "objective": "JavaScript: debounce",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>debounce</title></head>\n<body>\n  <h1>debounce</h1>\n  <p>Solution for l3-6-debounce</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>debounce</title></head>\n<body>\n  <div class=\"container\">\n    <h1>debounce</h1>\n    <p>Professional solution for l3-6-debounce</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-7-throttle",
    "title": "throttle",
    "objective": "JavaScript: throttle",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>throttle</title></head>\n<body>\n  <h1>throttle</h1>\n  <p>Solution for l3-7-throttle</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>throttle</title></head>\n<body>\n  <div class=\"container\">\n    <h1>throttle</h1>\n    <p>Professional solution for l3-7-throttle</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-8-pipe-compose",
    "title": "pipe/compose",
    "objective": "JavaScript: pipe/compose",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>pipe/compose</title></head>\n<body>\n  <h1>pipe/compose</h1>\n  <p>Solution for l3-8-pipe-compose</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>pipe/compose</title></head>\n<body>\n  <div class=\"container\">\n    <h1>pipe/compose</h1>\n    <p>Professional solution for l3-8-pipe-compose</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-9-uniqby",
    "title": "uniqBy",
    "objective": "JavaScript: uniqBy",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "exists",
        "type": "js-eval",
        "code": "(function(){ return typeof (window as any).solution==='function'; })()"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>uniqBy</title></head>\n<body>\n  <h1>uniqBy</h1>\n  <p>Solution for l3-9-uniqby</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>uniqBy</title></head>\n<body>\n  <div class=\"container\">\n    <h1>uniqBy</h1>\n    <p>Professional solution for l3-9-uniqby</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-1-dom-render-list",
    "title": "DOM render list",
    "objective": "HTML/CSS/JS: DOM render list",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>DOM render list</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>DOM render list</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-10-form-validation",
    "title": "Form validation",
    "objective": "HTML/CSS/JS: Form validation",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form validation</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form validation</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Form validation</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-11-stable-ids",
    "title": "Stable IDs",
    "objective": "HTML/CSS/JS: Stable IDs",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Stable IDs</title></head>\n<body>\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Age</th>\n    </tr>\n    <tr>\n      <td>Alice</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <td>Bob</td>\n      <td>30</td>\n    </tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Stable IDs</title></head>\n<body>\n  <table>\n    <caption>Employee Directory</caption>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Position</th>\n        <th>Department</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice Johnson</td>\n        <td>Developer</td>\n        <td>Engineering</td>\n      </tr>\n      <tr>\n        <td>Bob Smith</td>\n        <td>Designer</td>\n        <td>Creative</td>\n      </tr>\n      <tr>\n        <td>Carol White</td>\n        <td>Manager</td>\n        <td>Operations</td>\n      </tr>\n    </tbody>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\ntable {\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  border-collapse: collapse;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\ncaption {\n  padding: 1rem;\n  font-size: 1.5rem;\n  font-weight: bold;\n  text-align: left;\n  background: #2c3e50;\n  color: white;\n}\n\nth, td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #34495e;\n  color: white;\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: 0.875rem;\n}\n\ntbody tr:hover {\n  background: #f8f9fa;\n}\n\ntbody tr:last-child td {\n  border-bottom: none;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-12-accessibility-labels-roles",
    "title": "Accessibility labels/roles",
    "objective": "HTML/CSS/JS: Accessibility labels/roles",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Accessibility labels/roles</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Accessibility labels/roles</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-13-keyboard-shortcuts",
    "title": "Keyboard shortcuts",
    "objective": "HTML/CSS/JS: Keyboard shortcuts",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Keyboard shortcuts</title></head>\n<body>\n  <h1>Keyboard shortcuts</h1>\n  <p>Solution for l4-13-keyboard-shortcuts</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Keyboard shortcuts</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Keyboard shortcuts</h1>\n    <p>Professional solution for l4-13-keyboard-shortcuts</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-14-undo-last-delete",
    "title": "Undo last delete",
    "objective": "HTML/CSS/JS: Undo last delete",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Undo last delete</title></head>\n<body>\n  <h1>Undo last delete</h1>\n  <p>Solution for l4-14-undo-last-delete</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Undo last delete</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Undo last delete</h1>\n    <p>Professional solution for l4-14-undo-last-delete</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-15-bulk-clear-confirm",
    "title": "Bulk clear (confirm)",
    "objective": "HTML/CSS/JS: Bulk clear (confirm)",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Bulk clear (confirm)</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Bulk clear (confirm)</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-16-totals-panel",
    "title": "Totals panel",
    "objective": "HTML/CSS/JS: Totals panel",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Totals panel</title></head>\n<body>\n  <h1>Totals panel</h1>\n  <p>Solution for l4-16-totals-panel</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Totals panel</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Totals panel</h1>\n    <p>Professional solution for l4-16-totals-panel</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-17-live-total-update",
    "title": "Live total update",
    "objective": "HTML/CSS/JS: Live total update",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Live total update</title></head>\n<body>\n  <h1>Live total update</h1>\n  <p>Solution for l4-17-live-total-update</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Live total update</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Live total update</h1>\n    <p>Professional solution for l4-17-live-total-update</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-18-currency-input-mask",
    "title": "Currency input mask",
    "objective": "HTML/CSS/JS: Currency input mask",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Currency input mask</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Currency input mask</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Currency input mask</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-19-category-field",
    "title": "Category field",
    "objective": "HTML/CSS/JS: Category field",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Category field</title></head>\n<body>\n  <h1>Category field</h1>\n  <p>Solution for l4-19-category-field</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Category field</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Category field</h1>\n    <p>Professional solution for l4-19-category-field</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-2-add-item-form",
    "title": "Add item form",
    "objective": "HTML/CSS/JS: Add item form",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Add item form</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Add item form</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Add item form</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-20-date-field-sort",
    "title": "Date field + sort",
    "objective": "HTML/CSS/JS: Date field + sort",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Date field + sort</title></head>\n<body>\n  <h1>Date field + sort</h1>\n  <p>Solution for l4-20-date-field-sort</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Date field + sort</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Date field + sort</h1>\n    <p>Professional solution for l4-20-date-field-sort</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-21-responsive-two-column",
    "title": "Responsive two-column",
    "objective": "HTML/CSS/JS: Responsive two-column",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Responsive two-column</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Responsive two-column</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-22-toast-notifications",
    "title": "Toast notifications",
    "objective": "HTML/CSS/JS: Toast notifications",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Toast notifications</title></head>\n<body>\n  <h1>Toast notifications</h1>\n  <p>Solution for l4-22-toast-notifications</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Toast notifications</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Toast notifications</h1>\n    <p>Professional solution for l4-22-toast-notifications</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-23-modal-confirm",
    "title": "Modal confirm",
    "objective": "HTML/CSS/JS: Modal confirm",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Modal confirm</title></head>\n<body>\n  <h1>Modal confirm</h1>\n  <p>Solution for l4-23-modal-confirm</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Modal confirm</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Modal confirm</h1>\n    <p>Professional solution for l4-23-modal-confirm</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-24-loading-empty-error-visuals",
    "title": "Loading/Empty/Error visuals",
    "objective": "HTML/CSS/JS: Loading/Empty/Error visuals",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Loading/Empty/Error visuals</title></head>\n<body>\n  <h1>Loading/Empty/Error visuals</h1>\n  <p>Solution for l4-24-loading-empty-error-visuals</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Loading/Empty/Error visuals</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Loading/Empty/Error visuals</h1>\n    <p>Professional solution for l4-24-loading-empty-error-visuals</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-25-import-export-json",
    "title": "Import/Export JSON",
    "objective": "HTML/CSS/JS: Import/Export JSON",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Import/Export JSON</title></head>\n<body>\n  <h1>Import/Export JSON</h1>\n  <p>Solution for l4-25-import-export-json</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Import/Export JSON</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Import/Export JSON</h1>\n    <p>Professional solution for l4-25-import-export-json</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-26-input-masking-refine",
    "title": "Input masking refine",
    "objective": "HTML/CSS/JS: Input masking refine",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Input masking refine</title></head>\n<body>\n  <form>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Input masking refine</title></head>\n<body>\n  <form>\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #34495e;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"password\"],\ntextarea {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-family: inherit;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin-right: 0.5rem;\n}\n\nfieldset {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\nlegend {\n  padding: 0 0.5rem;\n  font-weight: 600;\n  color: #2c3e50;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  width: 100%;\n}\n\nbutton:hover {\n  background: #0056b3;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Input masking refine</title></head>\n<body>\n  <form id=\"myForm\">\n    <h2>Contact Form</h2>\n    <label for=\"name\">Name:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" required>\n    <button type=\"submit\">Submit</button>\n    <p id=\"message\"></p>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nform {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\nh2 {\n  margin-top: 0;\n  color: #2c3e50;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n}\n\ninput {\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #007bff;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.75rem 2rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n}\n\n#message {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  border-radius: 4px;\n  display: none;\n}\n\n#message.success {\n  display: block;\n  background: #d4edda;\n  color: #155724;\n  border: 1px solid #c3e6cb;\n}",
          "js": "document.getElementById('myForm').addEventListener('submit', function(e) {\n  e.preventDefault();\n  \n  const message = document.getElementById('message');\n  message.textContent = 'Form submitted successfully!';\n  message.className = 'success';\n  \n  setTimeout(() => {\n    message.style.display = 'none';\n    this.reset();\n  }, 3000);\n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-27-data-testids",
    "title": "Data-testids",
    "objective": "HTML/CSS/JS: Data-testids",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Data-testids</title></head>\n<body>\n  <h1>Data-testids</h1>\n  <p>Solution for l4-27-data-testids</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Data-testids</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Data-testids</h1>\n    <p>Professional solution for l4-27-data-testids</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-28-tabs-views",
    "title": "Tabs views",
    "objective": "HTML/CSS/JS: Tabs views",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Tabs views</title></head>\n<body>\n  <h1>Tabs views</h1>\n  <p>Solution for l4-28-tabs-views</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Tabs views</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Tabs views</h1>\n    <p>Professional solution for l4-28-tabs-views</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-29-stats-view-by-category",
    "title": "Stats view (by category)",
    "objective": "HTML/CSS/JS: Stats view (by category)",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Stats view (by category)</title></head>\n<body>\n  <h1>Stats view (by category)</h1>\n  <p>Solution for l4-29-stats-view-by-category</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Stats view (by category)</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Stats view (by category)</h1>\n    <p>Professional solution for l4-29-stats-view-by-category</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-3-delete-item",
    "title": "Delete item",
    "objective": "HTML/CSS/JS: Delete item",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Delete item</title></head>\n<body>\n  <h1>Delete item</h1>\n  <p>Solution for l4-3-delete-item</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Delete item</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Delete item</h1>\n    <p>Professional solution for l4-3-delete-item</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-30-ls-namespacing-v1-v2",
    "title": "LS namespacing v1→v2",
    "objective": "HTML/CSS/JS: LS namespacing v1→v2",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>LS namespacing v1→v2</title></head>\n<body>\n  <h1>LS namespacing v1→v2</h1>\n  <p>Solution for l4-30-ls-namespacing-v1-v2</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>LS namespacing v1→v2</title></head>\n<body>\n  <div class=\"container\">\n    <h1>LS namespacing v1→v2</h1>\n    <p>Professional solution for l4-30-ls-namespacing-v1-v2</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-31-debounced-saves",
    "title": "Debounced saves",
    "objective": "HTML/CSS/JS: Debounced saves",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Debounced saves</title></head>\n<body>\n  <h1>Debounced saves</h1>\n  <p>Solution for l4-31-debounced-saves</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Debounced saves</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Debounced saves</h1>\n    <p>Professional solution for l4-31-debounced-saves</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-32-print-view",
    "title": "Print view",
    "objective": "HTML/CSS/JS: Print view",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Print view</title></head>\n<body>\n  <h1>Print view</h1>\n  <p>Solution for l4-32-print-view</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Print view</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Print view</h1>\n    <p>Professional solution for l4-32-print-view</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-33-keyboard-nav-in-list",
    "title": "Keyboard nav in list",
    "objective": "HTML/CSS/JS: Keyboard nav in list",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Keyboard nav in list</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Keyboard nav in list</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-34-a11y-audit-fixes",
    "title": "A11y audit fixes",
    "objective": "HTML/CSS/JS: A11y audit fixes",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>A11y audit fixes</title></head>\n<body>\n  <h1>A11y audit fixes</h1>\n  <p>Solution for l4-34-a11y-audit-fixes</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>A11y audit fixes</title></head>\n<body>\n  <div class=\"container\">\n    <h1>A11y audit fixes</h1>\n    <p>Professional solution for l4-34-a11y-audit-fixes</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-35-calculator-keypad-grid",
    "title": "Calculator keypad grid",
    "objective": "HTML/CSS/JS: Calculator keypad grid",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator keypad grid</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator keypad grid</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-36-calculator-input-logic",
    "title": "Calculator input logic",
    "objective": "HTML/CSS/JS: Calculator input logic",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator input logic</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator input logic</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-37-calculator-evaluate",
    "title": "Calculator evaluate",
    "objective": "HTML/CSS/JS: Calculator evaluate",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator evaluate</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator evaluate</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-38-calculator-clear-del",
    "title": "Calculator clear/del",
    "objective": "HTML/CSS/JS: Calculator clear/del",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator clear/del</title></head>\n<body>\n  <ul>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Calculator clear/del</title></head>\n<body>\n  <h2>My Unordered List</h2>\n  <ul>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nul {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-39-memory-buttons",
    "title": "Memory buttons",
    "objective": "HTML/CSS/JS: Memory buttons",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Memory buttons</title></head>\n<body>\n  <h1>Memory buttons</h1>\n  <p>Solution for l4-39-memory-buttons</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Memory buttons</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Memory buttons</h1>\n    <p>Professional solution for l4-39-memory-buttons</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-4-edit-item-inline",
    "title": "Edit item inline",
    "objective": "HTML/CSS/JS: Edit item inline",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Edit item inline</title></head>\n<body>\n  <h1>Edit item inline</h1>\n  <p>Solution for l4-4-edit-item-inline</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Edit item inline</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Edit item inline</h1>\n    <p>Professional solution for l4-4-edit-item-inline</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-40-final-expense-tracker",
    "title": "Final Expense Tracker",
    "objective": "HTML/CSS/JS: Final Expense Tracker",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Final Expense Tracker</title></head>\n<body>\n  <h1>Final Expense Tracker</h1>\n  <p>Solution for l4-40-final-expense-tracker</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Final Expense Tracker</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Final Expense Tracker</h1>\n    <p>Professional solution for l4-40-final-expense-tracker</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-5-filter-items",
    "title": "Filter items",
    "objective": "HTML/CSS/JS: Filter items",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Filter items</title></head>\n<body>\n  <h1>Filter items</h1>\n  <p>Solution for l4-5-filter-items</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Filter items</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Filter items</h1>\n    <p>Professional solution for l4-5-filter-items</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-6-sort-controls",
    "title": "Sort controls",
    "objective": "HTML/CSS/JS: Sort controls",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sort controls</title></head>\n<body>\n  <ol>\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Sort controls</title></head>\n<body>\n  <h2>My Ordered List</h2>\n  <ol>\n    <li>First important item</li>\n    <li>Second important item</li>\n    <li>Third important item</li>\n    <li>Fourth important item</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 1rem;\n}\n\nol {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  line-height: 1.8;\n}\n\nli {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n}\n\nli:hover {\n  color: #007bff;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-7-empty-state",
    "title": "Empty state",
    "objective": "HTML/CSS/JS: Empty state",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Empty state</title></head>\n<body>\n  <h1>Empty state</h1>\n  <p>Solution for l4-7-empty-state</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Empty state</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Empty state</h1>\n    <p>Professional solution for l4-7-empty-state</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-8-persist-to-localstorage",
    "title": "Persist to localStorage",
    "objective": "HTML/CSS/JS: Persist to localStorage",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Persist to localStorage</title></head>\n<body>\n  <h1>Persist to localStorage</h1>\n  <p>Solution for l4-8-persist-to-localstorage</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Persist to localStorage</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Persist to localStorage</h1>\n    <p>Professional solution for l4-8-persist-to-localstorage</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-9-hydrate-from-localstorage",
    "title": "Hydrate from localStorage",
    "objective": "HTML/CSS/JS: Hydrate from localStorage",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "type": "dom-assert",
        "selector": "body"
      },
      {
        "id": "style",
        "type": "dom-assert",
        "selector": "style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "type": "dom-assert",
        "selector": "body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Hydrate from localStorage</title></head>\n<body>\n  <h1>Hydrate from localStorage</h1>\n  <p>Solution for l4-9-hydrate-from-localstorage</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Hydrate from localStorage</title></head>\n<body>\n  <div class=\"container\">\n    <h1>Hydrate from localStorage</h1>\n    <p>Professional solution for l4-9-hydrate-from-localstorage</p>\n  </div>\n</body></html>",
          "css": "body {\n  font-family: sans-serif;\n  margin: 0;\n  padding: 2rem;\n  background: #f5f5f5;\n}\n\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #2c3e50;\n  margin-top: 0;\n}",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  }
]