[
  {
    "level": 1,
    "slug": "l1-1-headings-101",
    "title": "Headings 101",
    "objective": "HTML: Headings 101",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "h1",
        "code": "!!document.querySelector(\"h1\")",
        "label": "Has element: h1"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-10-semantic-layout",
    "title": "Semantic Layout",
    "objective": "HTML: Semantic Layout",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-11-article-section",
    "title": "Article & Section",
    "objective": "HTML: Article & Section",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "article-exists",
        "code": "!!document.querySelector(\"article\")",
        "label": "Has a <article> element"
      },
      {
        "id": "section-exists",
        "code": "!!document.querySelector(\"section\")",
        "label": "Has a <section> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <article>Content</article>\n  <section>Content</section>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <article>Content</article>\n  <section>Content</section>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-12-figure-figcaption",
    "title": "Figure & Figcaption",
    "objective": "HTML: Figure & Figcaption",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "figure-exists",
        "code": "!!document.querySelector(\"figure\")",
        "label": "Has a <figure> element"
      },
      {
        "id": "figcaption-exists",
        "code": "!!document.querySelector(\"figcaption\")",
        "label": "Has a <figcaption> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <figure>Content</figure>\n  <figcaption>Content</figcaption>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <figure>Content</figure>\n  <figcaption>Content</figcaption>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-13-emphasis-strong",
    "title": "Emphasis & Strong",
    "objective": "HTML: Emphasis & Strong",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "em-exists",
        "code": "!!document.querySelector(\"em\")",
        "label": "Has a <em> element"
      },
      {
        "id": "strong-exists",
        "code": "!!document.querySelector(\"strong\")",
        "label": "Has a <strong> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <em>Content</em>\n  <strong>Content</strong>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <em>Content</em>\n  <strong>Content</strong>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-14-code-pre",
    "title": "Code & Pre",
    "objective": "HTML: Code & Pre",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "code-exists",
        "code": "!!document.querySelector(\"code\")",
        "label": "Has a <code> element"
      },
      {
        "id": "pre-exists",
        "code": "!!document.querySelector(\"pre\")",
        "label": "Has a <pre> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <code>Content</code>\n  <pre>Content</pre>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <code>Content</code>\n  <pre>Content</pre>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-15-blockquote-cite",
    "title": "Blockquote & Cite",
    "objective": "HTML: Blockquote & Cite",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "blockquote-exists",
        "code": "!!document.querySelector(\"blockquote\")",
        "label": "Has a <blockquote> element"
      },
      {
        "id": "cite-exists",
        "code": "!!document.querySelector(\"cite\")",
        "label": "Has a <cite> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <blockquote>Content</blockquote>\n  <cite>Content</cite>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <blockquote>Content</blockquote>\n  <cite>Content</cite>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-16-table-basic",
    "title": "Table: Basic",
    "objective": "HTML: Table: Basic",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector(\"table thead th\")",
        "label": "Has element: table thead th"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1rem 0;\n}\n\nth, td {\n  padding: 0.75rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #f8f9fa;\n  font-weight: 600;\n}\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-17-table-caption",
    "title": "Table: Caption",
    "objective": "HTML: Table: Caption",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector(\"table thead th\")",
        "label": "Has element: table thead th"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n  <caption>Content</caption>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n  <caption>Content</caption>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1rem 0;\n}\n\nth, td {\n  padding: 0.75rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #f8f9fa;\n  font-weight: 600;\n}\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-18-form-inputs",
    "title": "Form Inputs",
    "objective": "HTML: Form Inputs",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "inputs",
        "code": "!!document.querySelector(\"input[type=text]\")",
        "label": "Has element: input[type=text]"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-19-form-required-email",
    "title": "Form: Required Email",
    "objective": "HTML: Form: Required Email",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "form-exists",
        "code": "!!document.querySelector(\"form\")",
        "label": "Has a <form> element"
      },
      {
        "id": "input-email",
        "code": "!!document.querySelector(\"input[type='email']\")",
        "label": "Has email input"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-2-paragraph-basics",
    "title": "Paragraph Basics",
    "objective": "HTML: Paragraph Basics",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "p-exists",
        "code": "!!document.querySelector(\"p\")",
        "label": "Has a <p> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <p>Content</p>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <p>Content</p>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-20-form-fieldset-legend",
    "title": "Form: Fieldset + Legend",
    "objective": "HTML: Form: Fieldset + Legend",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "form-exists",
        "code": "!!document.querySelector(\"form\")",
        "label": "Has a <form> element"
      },
      {
        "id": "fieldset-exists",
        "code": "!!document.querySelector(\"fieldset\")",
        "label": "Has a <fieldset> element"
      },
      {
        "id": "legend-exists",
        "code": "!!document.querySelector(\"legend\")",
        "label": "Has a <legend> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n  <fieldset>Content</fieldset>\n  <legend>Content</legend>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n  <fieldset>Content</fieldset>\n  <legend>Content</legend>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-21-form-radio",
    "title": "Form: Radio",
    "objective": "HTML: Form: Radio",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "form-exists",
        "code": "!!document.querySelector(\"form\")",
        "label": "Has a <form> element"
      },
      {
        "id": "input-radio",
        "code": "!!document.querySelector(\"input[type='radio']\")",
        "label": "Has radio input"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-22-form-checkbox",
    "title": "Form: Checkbox",
    "objective": "HTML: Form: Checkbox",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "form-exists",
        "code": "!!document.querySelector(\"form\")",
        "label": "Has a <form> element"
      },
      {
        "id": "input-checkbox",
        "code": "!!document.querySelector(\"input[type='checkbox']\")",
        "label": "Has checkbox input"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-23-select-dropdown",
    "title": "Select Dropdown",
    "objective": "HTML: Select Dropdown",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "select-exists",
        "code": "!!document.querySelector(\"select\")",
        "label": "Has a <select> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <select>Content</select>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <select>Content</select>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-24-textarea-maxlength",
    "title": "Textarea + Maxlength",
    "objective": "HTML: Textarea + Maxlength",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "textarea-exists",
        "code": "!!document.querySelector(\"textarea\")",
        "label": "Has a <textarea> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <textarea>Content</textarea>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <textarea>Content</textarea>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-25-button-types",
    "title": "Button Types",
    "objective": "HTML: Button Types",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "button-exists",
        "code": "!!document.querySelector(\"button\")",
        "label": "Has a <button> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-26-labels-for",
    "title": "Labels & for",
    "objective": "HTML: Labels & for",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-27-image-alts",
    "title": "Image Alts",
    "objective": "HTML: Image Alts",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "img-exists",
        "code": "!!document.querySelector(\"img\")",
        "label": "Has a <img> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/150\" alt=\"Image\">\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/150\" alt=\"Image\">\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-28-metadata-basics",
    "title": "Metadata Basics",
    "objective": "HTML: Metadata Basics",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-29-favicon-link",
    "title": "Favicon Link",
    "objective": "HTML: Favicon Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "a-exists",
        "code": "!!document.querySelector(\"a\")",
        "label": "Has a <a> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-3-line-breaks-hr",
    "title": "Line Breaks & HR",
    "objective": "HTML: Line Breaks & HR",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-30-document-outline",
    "title": "Document Outline",
    "objective": "HTML: Document Outline",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-31-skip-link",
    "title": "Skip Link",
    "objective": "HTML: Skip Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "a-exists",
        "code": "!!document.querySelector(\"a\")",
        "label": "Has a <a> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-32-landmarks-minimal",
    "title": "Landmarks (minimal)",
    "objective": "HTML: Landmarks (minimal)",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-33-download-link",
    "title": "Download Link",
    "objective": "HTML: Download Link",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "a-exists",
        "code": "!!document.querySelector(\"a\")",
        "label": "Has a <a> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-34-mailto-tel-links",
    "title": "mailto/tel Links",
    "objective": "HTML: mailto/tel Links",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-35-address-block",
    "title": "Address Block",
    "objective": "HTML: Address Block",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-36-time-element",
    "title": "<time> element",
    "objective": "HTML: <time> element",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-37-datalist-suggestions",
    "title": "Datalist Suggestions",
    "objective": "HTML: Datalist Suggestions",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-38-progress-meter",
    "title": "Progress & Meter",
    "objective": "HTML: Progress & Meter",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-39-details-summary",
    "title": "Details/Summary",
    "objective": "HTML: Details/Summary",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "details",
        "code": "!!document.querySelector(\"details summary\")",
        "label": "Has element: details summary"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-4-lists-ul",
    "title": "Lists: UL",
    "objective": "HTML: Lists: UL",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "ul",
        "code": "!!document.querySelector(\"ul li\")",
        "label": "Has element: ul li"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ul>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ul>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-40-html-only-portfolio",
    "title": "HTML Only Portfolio",
    "objective": "HTML: HTML Only Portfolio",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-5-lists-ol",
    "title": "Lists: OL",
    "objective": "HTML: Lists: OL",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "ol",
        "code": "!!document.querySelector(\"ol li\")",
        "label": "Has element: ol li"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <ol>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ol>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <ol>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ol>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-6-nested-lists",
    "title": "Nested Lists",
    "objective": "HTML: Nested Lists",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-7-link-absolute",
    "title": "Link: Absolute",
    "objective": "HTML: Link: Absolute",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "a-exists",
        "code": "!!document.querySelector(\"a\")",
        "label": "Has a <a> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-8-link-relative",
    "title": "Link: Relative",
    "objective": "HTML: Link: Relative",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "a-exists",
        "code": "!!document.querySelector(\"a\")",
        "label": "Has a <a> element"
      },
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <a href=\"#\">Link</a>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 1,
    "slug": "l1-9-images-alt",
    "title": "Images + alt",
    "objective": "HTML: Images + alt",
    "passCriteria": "Required HTML structure exists.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>"
    },
    "tests": [
      {
        "id": "has-required",
        "code": "!!document.querySelector(\"[required]\")",
        "label": "Has required attribute"
      }
    ],
    "tags": [
      "html"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-1-normalize-base",
    "title": "Normalize & Base",
    "objective": "HTML+CSS: Normalize & Base",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-10-responsive-nav-css-only",
    "title": "Responsive Nav (CSS only)",
    "objective": "HTML+CSS: Responsive Nav (CSS only)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <nav>Content</nav>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <nav>Content</nav>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-11-grid-gallery",
    "title": "Grid Gallery",
    "objective": "HTML+CSS: Grid Gallery",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector(\".grid\")",
        "label": "Has element: .grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-12-media-queries",
    "title": "Media Queries",
    "objective": "HTML+CSS: Media Queries",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-13-sticky-header",
    "title": "Sticky Header",
    "objective": "HTML+CSS: Sticky Header",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <header>Content</header>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <header>Content</header>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-14-footer-columns",
    "title": "Footer Columns",
    "objective": "HTML+CSS: Footer Columns",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <footer>Content</footer>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <footer>Content</footer>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-15-css-tooltip",
    "title": "CSS Tooltip",
    "objective": "HTML+CSS: CSS Tooltip",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-16-css-modal-target",
    "title": "CSS Modal (target)",
    "objective": "HTML+CSS: CSS Modal (target)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-17-animations",
    "title": "Animations",
    "objective": "HTML+CSS: Animations",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-18-transitions",
    "title": "Transitions",
    "objective": "HTML+CSS: Transitions",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-19-svg-sprite",
    "title": "SVG Sprite",
    "objective": "HTML+CSS: SVG Sprite",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <svg>Content</svg>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <svg>Content</svg>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-2-type-scale",
    "title": "Type Scale",
    "objective": "HTML+CSS: Type Scale",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-20-aspect-ratio",
    "title": "Aspect Ratio",
    "objective": "HTML+CSS: Aspect Ratio",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-21-form-error-states",
    "title": "Form Error States",
    "objective": "HTML+CSS: Form Error States",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-22-visually-hidden-utility",
    "title": "Visually Hidden Utility",
    "objective": "HTML+CSS: Visually Hidden Utility",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-23-theme-toggle-vars",
    "title": "Theme Toggle (vars)",
    "objective": "HTML+CSS: Theme Toggle (vars)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-24-print-styles",
    "title": "Print Styles",
    "objective": "HTML+CSS: Print Styles",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-25-z-index-dropdown",
    "title": "Z-Index Dropdown",
    "objective": "HTML+CSS: Z-Index Dropdown",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-26-sticky-sidebar",
    "title": "Sticky Sidebar",
    "objective": "HTML+CSS: Sticky Sidebar",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-27-image-fit-sizes",
    "title": "Image Fit & Sizes",
    "objective": "HTML+CSS: Image Fit & Sizes",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/150\" alt=\"Image\">\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <img src=\"https://via.placeholder.com/150\" alt=\"Image\">\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-28-clamp-typography",
    "title": "Clamp Typography",
    "objective": "HTML+CSS: Clamp Typography",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-29-grid-form",
    "title": "Grid Form",
    "objective": "HTML+CSS: Grid Form",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector(\".grid\")",
        "label": "Has element: .grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-3-css-variables-theme",
    "title": "CSS Variables Theme",
    "objective": "HTML+CSS: CSS Variables Theme",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-30-css-accordion-details",
    "title": "CSS Accordion (details)",
    "objective": "HTML+CSS: CSS Accordion (details)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-31-css-tabs-radio",
    "title": "CSS Tabs (radio)",
    "objective": "HTML+CSS: CSS Tabs (radio)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-32-progress-bar",
    "title": "Progress Bar",
    "objective": "HTML+CSS: Progress Bar",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-33-badges-pills",
    "title": "Badges & Pills",
    "objective": "HTML+CSS: Badges & Pills",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-34-table-styles",
    "title": "Table Styles",
    "objective": "HTML+CSS: Table Styles",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "table",
        "code": "!!document.querySelector(\"table thead th\")",
        "label": "Has element: table thead th"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <table>\n    <tr><th>Header</th></tr>\n    <tr><td>Data</td></tr>\n  </table>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin: 1rem 0;\n}\n\nth, td {\n  padding: 0.75rem;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\nth {\n  background: #f8f9fa;\n  font-weight: 600;\n}\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-35-breadcrumb",
    "title": "Breadcrumb",
    "objective": "HTML+CSS: Breadcrumb",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-36-toast-css-show-hide",
    "title": "Toast (CSS show/hide)",
    "objective": "HTML+CSS: Toast (CSS show/hide)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-37-masonry-like-grid",
    "title": "Masonry-like Grid",
    "objective": "HTML+CSS: Masonry-like Grid",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector(\".grid\")",
        "label": "Has element: .grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-38-button-loading-state",
    "title": "Button Loading State",
    "objective": "HTML+CSS: Button Loading State",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-39-spacing-system-vars",
    "title": "Spacing System (vars)",
    "objective": "HTML+CSS: Spacing System (vars)",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-4-flex-header",
    "title": "Flex Header",
    "objective": "HTML+CSS: Flex Header",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "header",
        "code": "!!document.querySelector(\"header nav\")",
        "label": "Has element: header nav"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <header>Content</header>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <header>Content</header>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n.container {\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n}\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-40-landing-page-polish",
    "title": "Landing Page Polish",
    "objective": "HTML+CSS: Landing Page Polish",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-5-hero-center",
    "title": "Hero Center",
    "objective": "HTML+CSS: Hero Center",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-6-card-component",
    "title": "Card Component",
    "objective": "HTML+CSS: Card Component",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-7-button-variants",
    "title": "Button Variants",
    "objective": "HTML+CSS: Button Variants",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "btn",
        "code": "!!document.querySelector(\".btn\")",
        "label": "Has element: .btn"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <button>Content</button>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-8-form-layout-grid",
    "title": "Form Layout Grid",
    "objective": "HTML+CSS: Form Layout Grid",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "grid",
        "code": "!!document.querySelector(\".grid\")",
        "label": "Has element: .grid"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 2,
    "slug": "l2-9-accessible-focus",
    "title": "Accessible Focus",
    "objective": "HTML+CSS: Accessible Focus",
    "passCriteria": "Layout/structure prepared; selectors present.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      }
    ],
    "tags": [
      "html",
      "css"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": ""
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": ""
        },
        "notes": "Professional styling with modern CSS."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-1-sumstrings-number",
    "title": "sumStrings → number",
    "objective": "JavaScript: sumStrings → number",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-10-groupby",
    "title": "groupBy",
    "objective": "JavaScript: groupBy",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-11-stable-sort-by-key",
    "title": "stable sort by key",
    "objective": "JavaScript: stable sort by key",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-12-flattendepth",
    "title": "flattenDepth",
    "objective": "JavaScript: flattenDepth",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-13-chunk",
    "title": "chunk",
    "objective": "JavaScript: chunk",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-14-memoize",
    "title": "memoize",
    "objective": "JavaScript: memoize",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-15-bigint-sum",
    "title": "bigint sum",
    "objective": "JavaScript: bigint sum",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-16-currency-format",
    "title": "currency format (¥)",
    "objective": "JavaScript: currency format (¥)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-17-date-helpers-start-end",
    "title": "date helpers (start/end)",
    "objective": "JavaScript: date helpers (start/end)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-18-validators-email-url",
    "title": "validators (email/url)",
    "objective": "JavaScript: validators (email/url)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "input-email",
        "code": "!!document.querySelector(\"input[type='email']\")",
        "label": "Has email input"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-19-schema-guard",
    "title": "schema guard",
    "objective": "JavaScript: schema guard",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-2-once-fn",
    "title": "once(fn)",
    "objective": "JavaScript: once(fn)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-20-event-emitter",
    "title": "event emitter",
    "objective": "JavaScript: event emitter",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-21-localstorage-wrapper",
    "title": "localStorage wrapper",
    "objective": "JavaScript: localStorage wrapper",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-22-lru-cache-basic",
    "title": "LRU cache (basic)",
    "objective": "JavaScript: LRU cache (basic)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-23-binary-search",
    "title": "binary search",
    "objective": "JavaScript: binary search",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-24-merge-sort",
    "title": "merge sort",
    "objective": "JavaScript: merge sort",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-25-hash-map-simple",
    "title": "hash map (simple)",
    "objective": "JavaScript: hash map (simple)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-26-set-union-intersection-diff",
    "title": "set union/intersection/diff",
    "objective": "JavaScript: set union/intersection/diff",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-27-uuid-v4-simple",
    "title": "uuid v4 (simple)",
    "objective": "JavaScript: uuid v4 (simple)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-28-weighted-random",
    "title": "weighted random",
    "objective": "JavaScript: weighted random",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-29-calculator-eval-core",
    "title": "calculator eval core",
    "objective": "JavaScript: calculator eval core",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-3-closurecounter",
    "title": "closureCounter",
    "objective": "JavaScript: closureCounter",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-30-expression-parser-rpn",
    "title": "expression parser RPN",
    "objective": "JavaScript: expression parser RPN",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-31-sanitize-form-input",
    "title": "sanitize form input",
    "objective": "JavaScript: sanitize form input",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "form-exists",
        "code": "!!document.querySelector(\"form\")",
        "label": "Has a <form> element"
      },
      {
        "id": "input-exists",
        "code": "!!document.querySelector(\"input\")",
        "label": "Has a <input> element"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  const form = document.querySelector('form');\n  if (form) {\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      console.log('Form submitted');\n      alert('Success!');\n    });\n  }\n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-32-number-utils-clamp-round",
    "title": "number utils (clamp/round)",
    "objective": "JavaScript: number utils (clamp/round)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-33-promise-sleep-timeout",
    "title": "promise sleep/timeout",
    "objective": "JavaScript: promise sleep/timeout",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-34-retry-with-backoff",
    "title": "retry with backoff",
    "objective": "JavaScript: retry with backoff",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-35-async-queue-k",
    "title": "async queue (k)",
    "objective": "JavaScript: async queue (k)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-36-pub-sub",
    "title": "pub/sub",
    "objective": "JavaScript: pub/sub",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-37-finite-state-machine-calc",
    "title": "finite state machine (calc)",
    "objective": "JavaScript: finite state machine (calc)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-38-sum-amounts-helper",
    "title": "sum amounts helper",
    "objective": "JavaScript: sum amounts helper",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-39-crud-service-memory",
    "title": "CRUD service (memory)",
    "objective": "JavaScript: CRUD service (memory)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-4-array-map-filter-reduce",
    "title": "array map/filter/reduce",
    "objective": "JavaScript: array map/filter/reduce",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-40-totals-helper-by-category",
    "title": "totals helper by category",
    "objective": "JavaScript: totals helper by category",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-5-clone-shallow",
    "title": "clone (shallow)",
    "objective": "JavaScript: clone (shallow)",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-6-debounce",
    "title": "debounce",
    "objective": "JavaScript: debounce",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-7-throttle",
    "title": "throttle",
    "objective": "JavaScript: throttle",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-8-pipe-compose",
    "title": "pipe/compose",
    "objective": "JavaScript: pipe/compose",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 3,
    "slug": "l3-9-uniqby",
    "title": "uniqBy",
    "objective": "JavaScript: uniqBy",
    "passCriteria": "Function(s) pass unit checks.",
    "starter": {
      "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
    },
    "tests": [
      {
        "id": "html-structure",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has valid HTML structure"
      }
    ],
    "tags": [
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// expose your solution as window.solution = function(...) { };\n(window as any).solution = function(){ /* TODO */ };"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-1-dom-render-list",
    "title": "DOM render list",
    "objective": "HTML/CSS/JS: DOM render list",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-10-form-validation",
    "title": "Form validation",
    "objective": "HTML/CSS/JS: Form validation",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  const form = document.querySelector('form');\n  if (form) {\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      console.log('Form submitted');\n      alert('Success!');\n    });\n  }\n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-11-stable-ids",
    "title": "Stable IDs",
    "objective": "HTML/CSS/JS: Stable IDs",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-12-accessibility-labels-roles",
    "title": "Accessibility labels/roles",
    "objective": "HTML/CSS/JS: Accessibility labels/roles",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-13-keyboard-shortcuts",
    "title": "Keyboard shortcuts",
    "objective": "HTML/CSS/JS: Keyboard shortcuts",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-14-undo-last-delete",
    "title": "Undo last delete",
    "objective": "HTML/CSS/JS: Undo last delete",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-15-bulk-clear-confirm",
    "title": "Bulk clear (confirm)",
    "objective": "HTML/CSS/JS: Bulk clear (confirm)",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-16-totals-panel",
    "title": "Totals panel",
    "objective": "HTML/CSS/JS: Totals panel",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-17-live-total-update",
    "title": "Live total update",
    "objective": "HTML/CSS/JS: Live total update",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-18-currency-input-mask",
    "title": "Currency input mask",
    "objective": "HTML/CSS/JS: Currency input mask",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-19-category-field",
    "title": "Category field",
    "objective": "HTML/CSS/JS: Category field",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-2-add-item-form",
    "title": "Add item form",
    "objective": "HTML/CSS/JS: Add item form",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <form>\n    <input type=\"text\">\n    <button>Submit</button>\n  </form>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\nform {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\ninput, textarea, select {\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  background: #007bff;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background: #0056b3;\n}\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  const form = document.querySelector('form');\n  if (form) {\n    form.addEventListener('submit', (e) => {\n      e.preventDefault();\n      console.log('Form submitted');\n      alert('Success!');\n    });\n  }\n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-20-date-field-sort",
    "title": "Date field + sort",
    "objective": "HTML/CSS/JS: Date field + sort",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-21-responsive-two-column",
    "title": "Responsive two-column",
    "objective": "HTML/CSS/JS: Responsive two-column",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-22-toast-notifications",
    "title": "Toast notifications",
    "objective": "HTML/CSS/JS: Toast notifications",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-23-modal-confirm",
    "title": "Modal confirm",
    "objective": "HTML/CSS/JS: Modal confirm",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-24-loading-empty-error-visuals",
    "title": "Loading/Empty/Error visuals",
    "objective": "HTML/CSS/JS: Loading/Empty/Error visuals",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-25-import-export-json",
    "title": "Import/Export JSON",
    "objective": "HTML/CSS/JS: Import/Export JSON",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-26-input-masking-refine",
    "title": "Input masking refine",
    "objective": "HTML/CSS/JS: Input masking refine",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-27-data-testids",
    "title": "Data-testids",
    "objective": "HTML/CSS/JS: Data-testids",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-28-tabs-views",
    "title": "Tabs views",
    "objective": "HTML/CSS/JS: Tabs views",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-29-stats-view-by-category",
    "title": "Stats view (by category)",
    "objective": "HTML/CSS/JS: Stats view (by category)",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-3-delete-item",
    "title": "Delete item",
    "objective": "HTML/CSS/JS: Delete item",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-30-ls-namespacing-v1-v2",
    "title": "LS namespacing v1→v2",
    "objective": "HTML/CSS/JS: LS namespacing v1→v2",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-31-debounced-saves",
    "title": "Debounced saves",
    "objective": "HTML/CSS/JS: Debounced saves",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-32-print-view",
    "title": "Print view",
    "objective": "HTML/CSS/JS: Print view",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-33-keyboard-nav-in-list",
    "title": "Keyboard nav in list",
    "objective": "HTML/CSS/JS: Keyboard nav in list",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <nav>Content</nav>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <nav>Content</nav>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <nav>Content</nav>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-34-a11y-audit-fixes",
    "title": "A11y audit fixes",
    "objective": "HTML/CSS/JS: A11y audit fixes",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-35-calculator-keypad-grid",
    "title": "Calculator keypad grid",
    "objective": "HTML/CSS/JS: Calculator keypad grid",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-36-calculator-input-logic",
    "title": "Calculator input logic",
    "objective": "HTML/CSS/JS: Calculator input logic",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <label>Input: <input type=\"text\"></label>\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-37-calculator-evaluate",
    "title": "Calculator evaluate",
    "objective": "HTML/CSS/JS: Calculator evaluate",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-38-calculator-clear-del",
    "title": "Calculator clear/del",
    "objective": "HTML/CSS/JS: Calculator clear/del",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-39-memory-buttons",
    "title": "Memory buttons",
    "objective": "HTML/CSS/JS: Memory buttons",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-4-edit-item-inline",
    "title": "Edit item inline",
    "objective": "HTML/CSS/JS: Edit item inline",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-40-final-expense-tracker",
    "title": "Final Expense Tracker",
    "objective": "HTML/CSS/JS: Final Expense Tracker",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-5-filter-items",
    "title": "Filter items",
    "objective": "HTML/CSS/JS: Filter items",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-6-sort-controls",
    "title": "Sort controls",
    "objective": "HTML/CSS/JS: Sort controls",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-7-empty-state",
    "title": "Empty state",
    "objective": "HTML/CSS/JS: Empty state",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-8-persist-to-localstorage",
    "title": "Persist to localStorage",
    "objective": "HTML/CSS/JS: Persist to localStorage",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  },
  {
    "level": 4,
    "slug": "l4-9-hydrate-from-localstorage",
    "title": "Hydrate from localStorage",
    "objective": "HTML/CSS/JS: Hydrate from localStorage",
    "passCriteria": "UI manipulates DOM; tests pass; state persists when required.",
    "starter": {
      "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
      "css": "/* styles.css */",
      "js": "// main.js"
    },
    "tests": [
      {
        "id": "body",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      },
      {
        "id": "style",
        "code": "!!document.querySelector(\"style, link[rel=stylesheet]\")",
        "label": "Has element: style, link[rel=stylesheet]"
      },
      {
        "id": "boot",
        "code": "!!document.querySelector(\"body\")",
        "label": "Has element: body"
      }
    ],
    "tags": [
      "html",
      "css",
      "js"
    ],
    "solutions": [
      {
        "label": "Minimal Solution",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "/* styles.css */",
          "js": "// main.js"
        },
        "notes": "Simplest implementation meeting the requirements."
      },
      {
        "label": "Styled Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// main.js"
        },
        "notes": "Professional styling with modern CSS."
      },
      {
        "label": "Interactive Version",
        "files": {
          "html": "<!doctype html>\n<html lang=\"ja\">\n<head><meta charset=\"utf-8\"><title>Challenge</title></head>\n<body>\n  <!-- TODO -->\n</body></html>",
          "css": "body {\n  font-family: system-ui, -apple-system, sans-serif;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  line-height: 1.6;\n  color: #333;\n}\n\n\n\n\n\n\n\n",
          "js": "// Interactive functionality\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Challenge loaded');\n  \n  \n  \n  \n});"
        },
        "notes": "Enhanced with JavaScript interactivity."
      }
    ],
    "hints": [
      {
        "level": 1,
        "text": "まず、要素やAPIの『名前』に注目して、足りないものを洗い出しましょう。"
      },
      {
        "level": 2,
        "text": "合否条件を満たすための最小構成を列挙してから、1つずつ追加しましょう。"
      },
      {
        "level": 3,
        "text": "具体的なタグ名/メソッド名を確認して、対応する属性や引数を補ってください。"
      }
    ],
    "paramsSchema": {}
  }
]